import{_ as e,c as d,a2 as l,o as a}from"./chunks/framework.BDLWvHlL.js";const c=JSON.parse('{"title":"声笔飞系","description":"","frontmatter":{"title":"声笔飞系","date":"2024-01-29T09:00:32.000Z"},"headers":[],"relativePath":"sbf/index.md","filePath":"docs/sbf/index.md"}'),n={name:"sbf/index.md"};function s(r,t,i,f,o,p){return a(),d("div",null,t[0]||(t[0]=[l('<p>声笔飞系是声笔输入法的一个子系列，它包括声笔飞单、声笔飞码、声笔飞延、声笔飞讯、声笔飞简五个输入方案，统称为飞系方案。其中，飞单是最基础的，无论学习飞码、飞延、飞讯还是飞简都需要先学习飞单。</p><p>飞单、飞码、飞延、飞讯和飞简的单字编码完全一样，但是二简字的上屏方式有区别。实际上，在飞码、飞延、飞讯和飞简的在线教程中就没有讲单字的输入，而是引导用户到飞单去学习，只是讲了二简字上屏时的区别。飞单输入单字是二码起即时顶屏的，即二简字在后接声母时就上屏了。飞码输入单字是三码起顶的，即二简字在后接声母时必须先用空格上屏。飞延和飞讯输入单字是二码起延迟顶屏的。飞延是延迟两码顶屏，而飞讯是延迟一码或者两码顶屏。飞单、飞延和飞讯的二简字都只需要两码，而飞码的二简字需要三码。对于飞简来说，二简字的上屏分为两种情况，声笔字仍然可以二码顶屏，只有声偏字才需要空格上屏。</p><p>在词组方面，飞单是不支持常规词组的，只是在增强模式下支持数选简词。飞码的常规词组为四码，而飞延和飞讯的常规词组为五码（含空格），所以飞码被称为主词的方案，而飞延和飞讯被称为主单的方案。飞简的词组三码起就开始顶屏了，拥有最短的平均码长。</p><p>在可盲打性上，飞单优于飞讯，飞延和飞讯优于飞码，飞码优于飞简。但是，在平均码长上，则相反，飞简优于飞码，飞码优于飞延和飞讯，飞讯优于飞单。</p><p>总之，飞系的五个输入方案是紧密相关的，但是又各有特色，适用于不同的输入场景。如果您是单字派，那么就选择声笔飞单。如果您的应用场景是以词组为主，且输入文本的冗余度大，则建议选择声笔飞简，否则建议选择声笔飞码。反之，若您的应用场景是以单字为主，兼用词组，或者您更喜欢单字二码起顶的感觉，厌烦去判断二码字在什么时候应该加空格，那么就建议选择声笔飞延或声笔飞讯。当然，也可以根据不同的应用场景，切换成不同的方案，以便扬长避短，发挥各自的优势。</p><table tabindex="0"><thead><tr><th style="text-align:left;"></th><th style="text-align:left;">单字</th><th>词组</th></tr></thead><tbody><tr><td style="text-align:left;">声笔飞单</td><td style="text-align:left;">二码起顶，无延迟，静态编码</td><td>仅支持简词和数选词，静态编码</td></tr><tr><td style="text-align:left;">声笔飞码</td><td style="text-align:left;">三码起顶，无延迟，静态编码</td><td>额外还支持四码起顶词组，动态编码</td></tr><tr><td style="text-align:left;">声笔飞延</td><td style="text-align:left;">二码起顶，有延迟，静态编码</td><td>额外支持四码+空格打词组，动态编码</td></tr><tr><td style="text-align:left;">声笔飞讯</td><td style="text-align:left;">二码起顶，有延迟，静态编码</td><td>额外还支持五码起顶词组，动态编码</td></tr><tr><td style="text-align:left;">声笔飞简</td><td style="text-align:left;">二、三码混合顶，无延迟，静态编码</td><td>额外还支持三码起顶词组，动态编码</td></tr></tbody></table>',6)]))}const y=e(n,[["render",s]]);export{c as __pageData,y as default};
