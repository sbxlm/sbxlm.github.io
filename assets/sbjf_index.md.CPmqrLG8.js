import{_ as s,c as a,o as e,a5 as n,c7 as p,c8 as l,c9 as i,ca as t,cb as o,cc as c,cd as r,ce as _}from"./chunks/framework.poVErl_P.js";const v=JSON.parse('{"title":"声笔简飞","description":"","frontmatter":{"title":"声笔简飞","date":"2024-05-13T07:55:56.000Z","comments":false,"tags":["声笔","简飞","顶功"],"typora-root-url":"..\\\\..\\\\public"},"headers":[],"relativePath":"sbjf/index.md","filePath":"docs/sbjf/index.md"}'),d={name:"sbjf/index.md"},h=n(`<h2 id="_1-简飞概述" tabindex="-1">1 简飞概述 <a class="header-anchor" href="#_1-简飞概述" aria-label="Permalink to &quot;1 简飞概述&quot;">​</a></h2><p>声笔简飞，简称简飞，实际上只是一种经过特殊配置的声笔简码。由于需要配置不少选项，一般用户会觉得很麻烦，所以做了这个虚拟的简飞方案，以便用户开箱即用，或者在此基础上进行细微的调整，以适应用户的特殊需要。</p><h3 id="_1-1-适用场景" tabindex="-1">1.1 适用场景 <a class="header-anchor" href="#_1-1-适用场景" aria-label="Permalink to &quot;1.1 适用场景&quot;">​</a></h3><p>声笔简飞适用于比声笔简码的默认模式更复杂的输入场景，因为它通过融合飞系增强了对单字和二字词的离散能力，弥补了它在这方面的短板。付出的代价是，用户需要熟悉飞系的单字和使用更复杂的编码规则。</p><p>熟悉飞系的读者会问，飞码也是主词的输入方案，简飞和飞码两者之间应该怎样选择呢？简飞的平均码长比飞码短，但是动态性比飞码强，所以适用于比飞码更简单的输入场景。</p><p>输入场景的复杂性或者简单性取决于输入文本的信息冗余度。冗余度越大就越简单，冗余度越小，就越复杂。简飞适合输入的文本介于简码与飞码之间，但都是以词组输入为主。</p><h3 id="_1-2-配置选项" tabindex="-1">1.2 配置选项 <a class="header-anchor" href="#_1-2-配置选项" aria-label="Permalink to &quot;1.2 配置选项&quot;">​</a></h3><p>为了让简码取得尽量高的输入效率，简飞采用了最专业的选项配置，涉及到的选项设置如下。当然，用户可以根据自己的需要进行适当调整。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>switches:</span></span>
<span class="line"><span>  - name: third_pop</span></span>
<span class="line"><span>    reset: 1</span></span>
<span class="line"><span>    states: [四顶, 三顶]</span></span>
<span class="line"><span>  - name: is_enhanced</span></span>
<span class="line"><span>    reset: 1</span></span>
<span class="line"><span>    states: [常规, 增强]</span></span>
<span class="line"><span>  - name: single_display</span></span>
<span class="line"><span>    reset: 1</span></span>
<span class="line"><span>translator:</span></span>
<span class="line"><span>  enable_filtering: false</span></span>
<span class="line"><span>  single_selection: true</span></span>
<span class="line"><span>  lower_case: false</span></span>
<span class="line"><span>  enable_ssp: true</span></span>
<span class="line"><span>  no_ssp_in_ssb: true</span></span></code></pre></div><p>其中，</p><ul><li>将三顶third_pop设为1保证字词均可三码起顶；</li><li>增强is_enhanced为设1保证可以使用数选字词；</li><li>单次选重single_selection设为true保证可以在非全码时只观察首选即可；</li><li>单次选重配合单项提示single_display为true可以避免过多的提示信息；</li><li>启用过滤enable_filtering设为false可以在三码时出现多字词；</li><li>小写lower_case设为false强制多字词时只能用ssss格式来输入多字词，以便将更多的sszb空间让给二字词和三字词；</li><li>启用声声偏词enable_ssp_words设为true可以大大增强二字词的离散能力；</li><li>强制声声笔词no_ssp_in_ssb设为true则不能用ssb格式来输入声声偏词，可以大大减少重码。</li></ul><h3 id="_1-3-注意事项" tabindex="-1">1.3 注意事项 <a class="header-anchor" href="#_1-3-注意事项" aria-label="Permalink to &quot;1.3 注意事项&quot;">​</a></h3><ul><li>不要将三顶调整为false，因为那样的话，声声偏词就需要空格上屏，失去了简飞的优势；</li><li>不要将小写lower_case调整为true，因为那样会导致重码大量增加，大大影响输入体验；</li><li>尽量使用声数字和声标字来降低常用字的码长，必要时可以用跟打器专门训练一下它们；</li><li>声笔数不必强求都掌握，而且在变化不大时，尽量采用声笔笔的形式输入，可以减轻操作难度；</li><li>声声数词数量巨大，尽量掌握23789结尾的有理组，其他的不必强求；</li></ul><h2 id="_2-使用方法" tabindex="-1">2 使用方法 <a class="header-anchor" href="#_2-使用方法" aria-label="Permalink to &quot;2 使用方法&quot;">​</a></h2><h3 id="_2-1-三顶模式" tabindex="-1">2.1 三顶模式 <a class="header-anchor" href="#_2-1-三顶模式" aria-label="Permalink to &quot;2.1 三顶模式&quot;">​</a></h3><p>声笔简飞采用了三顶模式，使得大多数三字词和多字词都只要三键就可以输入了。</p><p>例如，在三顶模式下，输入「计算机」可能只需要<code>jsj</code>就行了，而在四顶模式下则至少需要<code>jsje</code>。</p><p>再如，输入「爱因斯坦」，在三顶模式下，一般只需要<code>vys</code>即可，而在四顶模式时需要<code>vyst</code>。</p><p>在声笔简飞的schema中，有一个参数enable_filtering来控制在输入三个声母时是否将多字词过滤掉。该参数的值默认为false，意味着不过滤，如下所示。如果将它改为true，那么在三个声母时就只有三字词而不会有多字词。</p><p>还有个参数lower_case，当它的值为false时，在三顶模式下，若采用一二三末字的声母来输入多字词，则第四码必须用大写字母。例如，「爱因斯坦」就需要用<code>vysT</code>来输入才行。</p><p>但是，有的人很不习惯用输入大写字母，怎么办呢？办法是将lower_case参数值设为true。这样的话，末字的声母改用末字的首笔来输入也可以。比如，「爱因斯坦」就可以用<code>vyse</code>来输入。</p><p><img src="`+p+'" alt="image-20230619093351922"></p><p>在遇到不知道末字首笔的多字词时，仍然可以用大写末字声母的办法来输入，例如：<code>魑魅魍魉cmwL</code>。两种输入方式都是支持的。</p><p>另外，在三顶模式下，二简词加一简字的组合一般不再能用空格上屏，需要用Tab上屏，因为三个声母的码位基本上被三字词和多字词占完了。比如，<code>wms</code>被「文明史」占用了，要用输入「我们是」就得用<code>wms+Tab</code>来输入了。</p><h3 id="_2-2-兼容飞单" tabindex="-1">2.2 兼容飞单 <a class="header-anchor" href="#_2-2-兼容飞单" aria-label="Permalink to &quot;2.2 兼容飞单&quot;">​</a></h3><p>为了增加单字的离散能力，声笔简飞还兼容了声笔飞单里的单字。声笔飞单的一简字和声笔字与声笔简码完全相同，它的二、三简字则作为首选的注释用单引号或者Tab键选择，其它的单字通过将第四码aeuio置换为23789或者在第四码后追加单引号来输入，但是实际输入的编码始终是四码加单引号。在默认情况下，因为提示级别为隐藏，所以飞单的二、三简字是没有提示信息的，不过仍然可以输入。若把提示级别为有理、无理或者两者，那么会出现以下候选提示。</p><p><img src="'+l+'" alt="image-20240511191737120"></p><p><img src="'+i+'" alt="image-20240411081214094"></p><p>但是，飞单的四码字即使提示级别为隐藏，也始终是会提示的，如下所示。</p><p><img src="'+t+'" alt="image-20240411080827112"></p><h3 id="_2-3-声声偏词" tabindex="-1">2.3 声声偏词 <a class="header-anchor" href="#_2-3-声声偏词" aria-label="Permalink to &quot;2.3 声声偏词&quot;">​</a></h3><p>声笔简飞通过兼容飞单解决了单字离散太弱的问题，然而二字词离散太弱的问题仍然存在。二字词在现代汉语中占据主导地位，对输入效率影响很大。如何解决这个问题呢？这个问题的症结在于ssb的空间太小，只有<code>21*21*5 = 2205</code>个码位。虽然有数选词来缓解此问题，但是用到了数字，操作不太方便，而且作用也有限。所以，解决问题的出路在于如何增加扩大字母编码空间，进一步结合飞单来为二字词编码，从而利用更大的三码空间来大大缓解二字词的离散压力。</p><p>最终想到的解决方案是，增加s1s2p2b1b1b1方式编码的二字词，适用于末字为声偏字的二字词，在打开schema中translator项下的enable_ssp子项时启用，一般需要结合三顶模式来使用，否则在三码时需要空格上屏，对效率的提升作用不大。这时，如果no_ssp_in_ssb子项为false，那么ssp二字词仍然可以用ssb格式来输入。但是，若把no_ssp_in_ssb子项设为true，ssp二字词就不能用ssb格式来输入了。</p><p>例如，「编辑」和「区位」只能用ssp格式来输入，而「故而」和「壮大」只能用ssb格式输入。</p><p><img src="'+o+'" alt="image-20240526083120491"></p><p><img src="'+c+'" alt="image-20240526083139502"></p><p><img src="'+r+'" alt="image-20240526083159502"></p><p><img src="'+_+'" alt="image-20240526083216093"></p><p>​</p>',39),m=[h];function b(u,f,g,q,x,k){return e(),a("div",null,m)}const T=s(d,[["render",b]]);export{v as __pageData,T as default};
