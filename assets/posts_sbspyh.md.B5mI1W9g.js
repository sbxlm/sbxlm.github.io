import{_ as s,c as n,o as a,a5 as p}from"./chunks/framework.Cirm9UIj.js";const _=JSON.parse('{"title":"RIME版声笔双拼优化实验","description":"","frontmatter":{"title":"RIME版声笔双拼优化实验","date":"2019-08-13T14:13:52.000Z","tags":null},"headers":[],"relativePath":"posts/sbspyh.md","filePath":"posts/sbspyh.md"}'),t={name:"posts/sbspyh.md"},l=p(`<h2 id="利用单字的短码空闲空间" tabindex="-1">利用单字的短码空闲空间 <a class="header-anchor" href="#利用单字的短码空闲空间" aria-label="Permalink to &quot;利用单字的短码空闲空间&quot;">​</a></h2><p>由于现在的声笔双拼只考虑了规则编码，所以单字编码在码长为2和3时都有不少的短码空间是空闲的，非常浪费。利用这种空间的办法是，将声笔简码的ss和ssb型二字词插入到该空间中。这种词现在有1098个，频度最高的一些二字词及其编码和频度如下。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>一个	ygu	997773</span></span>
<span class="line"><span>我们	wmu	812417</span></span>
<span class="line"><span>什么	sm	742524</span></span>
<span class="line"><span>起来	qle	330495</span></span>
<span class="line"><span>因为	yw	317518</span></span>
<span class="line"><span>现在	xz	315893</span></span>
<span class="line"><span>怎么	zm	294900</span></span>
<span class="line"><span>问题	wt	279209</span></span>
<span class="line"><span>经济	jj	257865</span></span>
<span class="line"><span>这么	zmu	225697</span></span>
<span class="line"><span>这些	zx	225430</span></span>
<span class="line"><span>一定	yd	201525</span></span>
<span class="line"><span>如此	rci	194183</span></span>
<span class="line"><span>一点	ydi	189033</span></span>
<span class="line"><span>关系	gx	188400</span></span>
<span class="line"><span>可能	kn	185841</span></span>
<span class="line"><span>而且	vqi	176585</span></span>
<span class="line"><span>心中	xzi	176312</span></span>
<span class="line"><span>地方	df	173581</span></span>
<span class="line"><span>姑娘	gn	168226</span></span></code></pre></div><p>如果能充分使用上述简码二字词的话，对输入效率的提升是有帮助的，只是编码格式不一样，需要记忆。</p><p>另外，还有少量的sb和sbb型空间没有利用，如何利用？现在还没有考虑好。</p><h2 id="利用词组的三码空闲空间" tabindex="-1">利用词组的三码空闲空间 <a class="header-anchor" href="#利用词组的三码空闲空间" aria-label="Permalink to &quot;利用词组的三码空闲空间&quot;">​</a></h2><p>目前，声笔双拼中，编码sss是空闲的。优化的措施是，把最常见的词组取前三码作为其简码放在sss空间中，同时也保留它们的全码。也就是说，这种简码不是强制性的。不过，如果用户利用了简码，并且如果四码上有重码词组的话，在选择重码后，重码的词组就可以提前，就会多产生一个四键词组，从而提高输入效率。这种简码词组共有一万多条，下面是一些例子。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>没有	mzy	826617</span></span>
<span class="line"><span>什么	sfm	742524</span></span>
<span class="line"><span>自己	zij	741012</span></span>
<span class="line"><span>知道	zid	574771</span></span>
<span class="line"><span>可以	key	432546</span></span>
<span class="line"><span>这个	zeg	404217</span></span>
<span class="line"><span>中国	zsg	336314</span></span>
<span class="line"><span>起来	qil	330495</span></span>
<span class="line"><span>这样	zey	328523</span></span>
<span class="line"><span>已经	yij	325164</span></span>
<span class="line"><span>发展	faz	323016</span></span>
<span class="line"><span>因为	ynw	317518</span></span>
<span class="line"><span>现在	xmz	315893</span></span>
<span class="line"><span>怎么	zfm	294900</span></span>
<span class="line"><span>工作	gsz	287827</span></span>
<span class="line"><span>问题	wft	279209</span></span>
<span class="line"><span>经济	jyj	257865</span></span>
<span class="line"><span>还是	hls	238983</span></span>
<span class="line"><span>出来	cul	238047</span></span>
<span class="line"><span>如果	rug	234912</span></span>
<span class="line"><span>只是	zis	234730</span></span>
<span class="line"><span>爱因斯坦	vys	233485</span></span></code></pre></div><h2 id="升级办法" tabindex="-1">升级办法 <a class="header-anchor" href="#升级办法" aria-label="Permalink to &quot;升级办法&quot;">​</a></h2><p>将新的sbsp.dict.yaml文件复制的用户文件夹覆盖原来的同名文件，然后将sbsp.userdb文件夹删除，再重新部署，就可以使用了。注意，删除sbsp.userdb文件夹后，你之前所造的词组和产生的调频信息就丢失了，只有重新再来一遍。因为码表有破坏性的变更，与用户数据不一致了，可能产生冲突，无法利用原有的用户数据，非常遗憾。</p>`,10),e=[l];function i(c,o,d,r,h,u){return a(),n("div",null,e)}const m=s(t,[["render",i]]);export{_ as __pageData,m as default};
