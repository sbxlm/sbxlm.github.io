import{_ as p,c as s,o as t,a5 as i,bw as e,bx as a,by as _,bz as o,bA as c,bB as r,bC as m,bD as l,bE as d,bF as g,bG as b}from"./chunks/framework.BXGKy5ZX.js";const j=JSON.parse('{"title":"声笔鹤整","description":"","frontmatter":{"title":"声笔鹤整","date":"2020-12-08T15:06:28.000Z","typora-root-url":"..\\\\..\\\\public"},"headers":[],"relativePath":"sbhz/index.md","filePath":"docs/sbhz/index.md"}'),n={name:"sbhz/index.md"},u=i('<p>声笔鹤整是与声笔小鹤相对应的整句方案。与声笔小鹤相比，</p><ul><li>它的优点是：更接近传统双拼，但又比传统双拼高效，因为可以随时用笔画辅助来筛选重码，还能采用顶功模式来节约用键；</li><li>它的缺点是：无法使用简拼来缩短码长，因而输入效率比较低下。所以，在设计上是把声笔鹤整作为到声笔小鹤的过渡方案，由习惯传统双拼的人来使用。</li></ul><p>声笔鹤整默认采用后置顶功模式，以便尽量发挥它的优势。下面我们举一个例子来加以说明。</p><blockquote><p>例子1: 中文输入法是中文使用者的基础工具。</p></blockquote><p>方法1: <code>中文zsw_ 输入法suruf_ 是s_ 中文zsw_ 使用者siysz_ 的d_ 基础jc2 工具。gsj.</code></p><p>方法2: <code>中文输入法zswfsuruf_ 是s_ 中文使用者zswfsiysz_ 的d_ 基础工具。jicugsj.</code></p><p>方法3: 如下图所示</p><p><img src="'+e+'" alt="image-20240331081437298"></p><p>上述例子1是一个简单的句子，里面不存在罕见的字词和怪异的语法现象，所以采用以上三种方法都是毫无问题的。方法1的分词颗粒度最细，以单词为单位。方法3的分词颗粒度最粗，以整句为单位。方法2的分词颗粒度居中，以短语为单位。假设三种方法都没有任何转换错误、键入错误和键入错误，那么显然方法3是最佳的输入方式。因为方法3对人来说，无需分词，还省略了空格，能够省脑、省力；对设备来说，可以利用更多的语境，以便提高转换的准确性。</p><p>但是，对于复杂的输入场景，再考虑到键入错误和拼写错误，结论就大不一样了。</p><blockquote><p>例子2: 故君子居必择乡， 游必就士， 所以防邪辟而近中正也。</p></blockquote><p>例子2是荀子《劝学》中的句子。由于声笔拼音词典中已经收录了「故君子居必择乡」，所以按照两键一字来输入的话，肯定会命中。然而，后面的内容就没有这么幸运了，若当成两个输入单位，按两键一字的方式进行输入则肯定不能命中，因为声笔拼音词典没有收录它们。这就会导致大量回改，虽然声笔鹤整的回改操作是比较容易的，但是仍然很不划算。这时，最好的输入方式就是以字词为单位来进行，利用笔画加码和顶功上屏仍然可以实现比较快速的输入。</p><p>读者可能会问，如果采用搜狗拼音，利用它强大的云词库，会不会产生很好的效果呢？不错，经典的古文句子和短语，搜狗云词库都已经收录，只要你的拼写准确且键准完全正确，那么可以两键一字地一溜烟打过去。但是，问题正好就出现在拼写和键准上。比如，我在使用搜狗小鹤双拼时就把「所以防邪辟而近中正也」中的「辟」字拼写成了bi，而不是pi，从而导致无法命中，并且回改起来非常困难。</p><p><img src="'+a+'" alt="image-20240331111209547"></p><p>所以，善用分词，用好分词，即使对于拥有强大云词库的搜狗拼音也是非常重要的。然而，既然要分词输入，云词库就不那么重要了。反而是，重码字词的快速筛选能力和新词的便捷创建能力变得非常重要，这正是声笔鹤整的强项，更是声笔小鹤的强项。</p><blockquote><p>例子3: 质子</p></blockquote><p><img src="'+_+'" alt="image-20240402083559384"></p><p>在输入zizi后，候选中没有「质子」，于是追加末字首笔。</p><p><img src="'+o+'" alt="image-20240402083617864"></p><p>「质子」出现在候选中了，可以用8选择，也可以再补充首字的首笔。</p><p><img src="'+c+'" alt="image-20240402083657705"></p><p>「质子」被提前了，此时可以用3选择，也可以再补充首字的次笔。</p><p><img src="'+r+'" alt="image-20240402083721537"></p><p>在补充首字的前两笔后，「质子」被提前到了首选。此时，后续如果还需要输入的话，这个首选是可以被顶上屏幕的，能够节约空格键。同时，可以只观察首选和不用数字键。所以，建议用户一般采用最后这种方式来输入。</p><blockquote><p>例子4: 鹤整</p></blockquote><p><img src="'+m+'" alt="image-20240402121256851"></p><p><img src="'+l+'" alt="image-20240402121330664"></p><p><img src="'+d+'" alt="image-20240402121347825"></p><p>在输入的时候，可能并不知道「鹤整」不是词组，仍然把它当成词组来输入。输入到这一步时，鹤字已经出现在候选中了。于是很自然地进入选字组词阶段。</p><p><img src="'+g+'" alt="image-20240402121411951"></p><p><img src="'+b+'" alt="image-20240402121442104"></p><p>在选择「鹤」「整」两字后，再次输入hez，发现「鹤整」一词已经造好了。</p><p>虽然声笔鹤整相比传统双拼已经好用得多了，但是它仍然不理想。由于声笔小鹤能够完美地兼容简拼，还能四码顶屏，因而可以进一步节约用键，而且尽量减少回改。故而，建议把声笔鹤整作为一种学习声笔小鹤的过渡手段，由习惯整句输入的用户使用。</p>',33),z=[u];function f(h,k,q,x,T,w){return t(),s("div",null,z)}const y=p(n,[["render",f]]);export{j as __pageData,y as default};
