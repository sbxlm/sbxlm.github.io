import{_ as e,c as a,o as t,a5 as o}from"./chunks/framework.CoDogpMp.js";const x=JSON.parse('{"title":"声笔系列码体系修改","description":"","frontmatter":{"title":"声笔系列码体系修改","date":"2019-10-17T13:33:27.000Z","tags":["声笔系列码","体系","修改"]},"headers":[],"relativePath":"posts/sbxlmxg.md","filePath":"posts/sbxlmxg.md"}'),s={name:"posts/sbxlmxg.md"},c=o('<h2 id="整句方案调整" tabindex="-1">整句方案调整 <a class="header-anchor" href="#整句方案调整" aria-label="Permalink to &quot;整句方案调整&quot;">​</a></h2><p>将简码整句1更名为声笔智能，并取消其它所有整句类型，包括简码整句2、飞码整句、快码整句、声双整句和声二整句，因为它们与声笔智能的简单、高效相比，已经失去了存在的意义。这么做的目的是突显声笔智能输入法的地位，同时也表明它的本质特征不是整句，而是智能。</p><p>虽然声笔智能是基于声笔码和声笔简码的，但是与它们又有较大的区别，因为它没有利用顶功技术，而是充分利用了声笔编码的弹性特点，同时融合了现代拼音输入法的智能技术，产生了非常奇特的效果。这种奇特的效果是，比拼音智能输入法更加灵活，而且还更加简单、快捷。如果能够像搜狗拼音那样利用云端的大数据的话，那么就会如虎添翼。</p><p>声笔智能还可以选择采用语句流的方式，以便利用aeiou来执行搜索、查询词典、翻译等操作，具有很大的发展利用和空间，将大大地优于现在的各种拼音输入法。</p><h2 id="增加声笔拼音" tabindex="-1">增加声笔拼音 <a class="header-anchor" href="#增加声笔拼音" aria-label="Permalink to &quot;增加声笔拼音&quot;">​</a></h2><p>声笔拼音和其它拼音输入法非常类似，主要的差异是以<code>a e o</code>开始的零声母音节的声母用v来代表。这样，在一串拼音中基本上可以完全确定音节的界线，从而可以提高拼音汉字转换的准确性。另外，由于所有的音节都不以<code>a e i o u</code>开头了，所以可以不加切换地用它们来进行笔画反查，这时<code>a e i o u</code>分别表示<code>折 横 竖 捺 撇</code>五种笔画。</p><p>声笔拼音还被声笔系列码的所有其它方案用来进行拼音反查，所以一定要知道它的用法，否则在拼音反查时会遇到困难。</p>',7),r=[c];function d(_,i,n,p,l,h){return t(),a("div",null,r)}const u=e(s,[["render",d]]);export{x as __pageData,u as default};
