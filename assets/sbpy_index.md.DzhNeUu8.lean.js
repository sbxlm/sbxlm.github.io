import{_ as e,a as o,b as i,c as p}from"./chunks/image-20240519100730514.Bm-P9bQj.js";import{_ as c,c as l,a2 as s,o as d}from"./chunks/framework.BDLWvHlL.js";const t="/images/image-20230819091825507.webp",r="/images/image-20230813150253295.webp",n="/images/image-20240705061303401.webp",g="/images/image-20240705061802901.webp",m="/images/image-20240705084437753.webp",h="/images/image-20240705062008469.webp",_="/images/image-20240705062034581.webp",u="/images/image-20240705085022495.webp",b="/images/image-20240708174648251.webp",q="/images/image-20240708174858078.webp",y="/images/image-20240518075426041.webp",x="/images/image-20240518075600776.webp",f="/images/image-20240518075633682.webp",z="/images/image-20240911024152138.webp",k="/images/image-20240518075922690.webp",P="/images/image-20240518080119762.webp",v="/images/image-20240518080301352.webp",j="/images/image-20240518080324410.webp",S="/images/image-20240518080746737.webp",T="/images/image-20240911025011231.webp",B="/images/image-20240911025050811.webp",w="/images/image-20240518084930397.webp",G="/images/image-20240911025856024.webp",K="/images/image-20240911030142100.webp",$="/images/image-20240518085305915.webp",N="/images/image-20240518085841426.webp",O="/images/image-20240518090002060.webp",C="/images/image-20240518090031125.webp",E="/images/image-20240518090245141.webp",A="/images/image-20240518090412588.webp",D="/images/image-20240518090558447.webp",J="/images/image-20240518090706789.webp",M="/images/image-20240911030812147.webp",R="/images/image-20240518090846758.webp",U="/images/image-20240911031045276.webp",V="/images/image-20240518091056896.webp",W="/images/image-20240911031822488.webp",Z="/images/image-20240911032117579.webp",F="/images/image-20240911032159466.webp",H="/images/image-20240911032231699.webp",I="/images/image-20240911032854881.webp",L="/images/image-20240911033004653.webp",Q="/images/image-20240911033051975.webp",X="/images/image-20240911033127189.webp",Y="/images/image-20240911033553068.webp",aa="/images/image-20250330163635624.webp",ea="/images/image-20250330163649605.webp",na=JSON.parse('{"title":"声笔拼音","description":"","frontmatter":{"title":"声笔拼音","date":"2019-11-30T04:05:05.000Z","comments":false,"typora-root-url":"..\\\\..\\\\public"},"headers":[],"relativePath":"sbpy/index.md","filePath":"docs/sbpy/index.md"}'),oa={name:"sbpy/index.md"};function ia(pa,a,ca,la,sa,da){return d(),l("div",null,a[0]||(a[0]=[s('<h2 id="_1-引言" tabindex="-1">1 引言 <a class="header-anchor" href="#_1-引言" aria-label="Permalink to &quot;1  引言&quot;">​</a></h2><p>拼音输入法是中国大陆目前使用得最为广泛的输入方案，其用户比例至少在96%以上，甚至可能高达99%。确切地说，这里的拼音输入法是全拼输入，不包括双拼，因为后者使用的人非常少，相比全拼可以说是微乎其微。</p><p>在中国大陆，任何需要输入中文的设备或者操作系统，不论电脑、手机还是平板、电视，也不论Windows、MacOS、Android还是iOS，全拼输入方案都是必备的，而且是默认的中文输入方式。不管国际大公司如微软、谷歌、苹果，还是国内大厂如腾讯、百度、讯飞、华为，都推出了自己的拼音输入法。曾经那种万码奔腾的局面已经一去不复返了，大街小巷的五笔打字培训班也已经成为历史的记忆，自然码、两笔、郑码等其它原来比较知名的输入方案则越来越少为人知。笔画输入法也只有很少的人在使用，一般是功能机时代沿袭下来的。</p><p>为什么会形成全拼输入一家独大而其它输入方案几乎销声匿迹的现象呢？是全拼输入已经完美的解决了中文输入的问题，人们已经非常满意，别无他求了吗？拼音输入没有改进、优化的地方了吗？非也！而且远非如此！实际上，现在的拼音输入法还存在很多问题，有的问题可以说是怨声载道，有的问题是因为缺乏指导而使用不当造成的。</p><h3 id="_1-1-拼音输入误区" tabindex="-1">1.1 拼音输入误区 <a class="header-anchor" href="#_1-1-拼音输入误区" aria-label="Permalink to &quot;1.1 拼音输入误区&quot;">​</a></h3><p>现在的拼音输入法常常被称为智能整句输入法。人们在描述输入法发展历史的时候，也常常说从字到词到句。从理论上来说，更大的语境更有利于提高音字转换的正确性。从算法上来说，通过长期的积累，已经有成熟的隐马尔科夫模型。从硬件上来说，CPU、内存、硬盘等性能大幅提升，价格大幅下降，已经不是问题。加上互联网的成熟，更可以利用大厂服务器的资源和大数据来提升智能整句输入法的能力。从用户的角度来说，使用整句输入可以没有分词的负担，还可以少按大量的空格，只需要练熟400来个音节拼式，只管一个劲地击键就行了。似乎一切都完美了！</p><p>然而，实际情况却让人大跌眼镜，绝大部分人并没有以整句为单位来输入，真正采用整句输入的人其输入的效率也并不高。最能称得上整句输入法的微软拼音整句模式，可以算是技术上的精品了，但是采用的人并不多。微软拼音在面对搜狗、百度等利用搜索引擎和网络词库的次整句输入法时，显得力不从心，用户数量越来越少。整句输入的问题出在哪里？问题出在以下几个地方，即整句输入“八宗罪”。</p><p>(1) 编码效率低</p><p>拼音作为编码来说，编码效率太低，导致平均码长过长，超过了三码。汉语拼音的设计初衷是用于注音识读，所以遵循了音素化和国际化的原则。在这些原则的指导下，由于普通话自身的特点，使得拼音字母的利用效率很低，存在大量冗余。从编码的角度来说，用26个字母表达400个音节，每个音节只需要不到2个字母，因为26×26=676，可用的编码空间远远大于400，而汉语拼音却用了超过3个字母，所以效率会低。</p><p>(2) 确认成本高</p><p>整句的转换结果在输入的过程中可能会不断地发生变化，所以不到输入结束是不能判断其正误的，能够判断正误的只有输入的拼音串，拼音串不会发生变化。然而拼音并不是文字，人们对它的识读能力是很弱的，最多只能快速找出刚才输入的一两个音节的错误。因此，在输入过程中，最多只能做到输入的拼音串尽量不要出错。在一句话输入完成后，用户不通读一遍转换结果，是无法知道对错的，即使结果完全正确，这一步都是少不了的，而且句子越长判别正误的成本越高。</p><p>(3) 键错概率大</p><p>人不是机器，人在输入编码时，击键的准确性是有限的，一般来说，在计算机标准键盘上，有95%的键准就不错了。如果在手机上操作，那么键准还会低不少。假设整句输入的平均长度为15个汉字，每字平均3键，平均每个句子用了45键，那么整句键入完全正确的概率就只有0.95^45≈9.94%，不到10%！而且，随着句子长度的增加和击键速度的加快，正确率还会进一步下降。怎么办呢？现在的拼音输入法普遍都提供了自动纠错的能力。其原理是利用全拼的高冗余，对易于混淆的键进行容错。自动纠错确实能起到一些作用，但也同时带来了新的问题，可能会弄巧成拙，把用户需要的结果误改掉。</p><p>(4) 回改成本高</p><p>如果在上屏前确认时发现了错误，就需要进行回改。错误可能发生在一句话的任何位置，可能是转换结果有错，也可能是输入的拼音串有错。发现错误的位置后，需要先定位才能修改，其定位方法一般是用左箭头键逐个音节向前移动，用右箭头键逐个字母向后移动。箭头键的位置远离本位键，操作跨度大，缓慢、费时。搜狗拼音还有一个少用的方法是用Ctrl加字母键来定位，其特点是用键次数少，但是操作难度大。</p><p>(5) 残错概率大</p><p>不少人习惯于在输入过程中监视转换结果，在输入最后一个字词时就不再观察转换结果，然而可能会正是这最后一个字词又导致前面已有的结果发生变化，导致错误。这种错误，用户往往不容易发现，使得残错率升高，因为他不自觉地会认为，前面是正确的，最后一个选择也正确的话，就不会有错了。另一种情况是，明明知道还有错误，但是因为觉得修改太麻烦了，就不愿意修改而直接上屏了；这在打字比赛之类的紧急场合和聊天之类的不严肃场合是很常见的。还有一种情况是，由于输入的内容很多，虽然仔细检查了，以为没错，但是实际上仍然还有没检查到的错误。</p><p>(6) 可重用性差</p><p>拼音输入法是以输入单位进行记忆的。以句子为单位进行输入，就是以句子为单位进行记忆。而句子，除非是很短的日常用句，在使用中重复的可能性是非常小的。输入法很难学习到用户的输入习惯，也就很难根据用户的输入习惯来改进输入效果。例如，就是前面的「也就很难根据用户的输入习惯来改进输入效果」这样一句话，是很难被再次原封不动地使用的。</p><p>(7) 自由度受限</p><p>为了提高转换的准确性，行文就不能有创意，要尽量使用大众化的表达方式。用俗话来说，就是要尽量打水文。你要说「检查错误的方法」而不要说「查错法」或者「检错法」。要使用这种简略的说法，需要事先造词，然后才能用在句子当中。造词的过程并不简单，你得先以词为单位输入一遍，在句子中输入一遍是不能造出这个词的。可是，按词输入是整句模式的弱项，选重非常麻烦。更为伤脑筋的是，你常常并不知道系统中是否有某个词。</p><p>(8) 适应性不强</p><p>在不少时候，用户无法以句子为单位来进行输入。例如，在进行文章的审校时，往往是只是对个别的字词进行修改，这时不得不以字词为单位来输入。又如，在列出人名时，也只能以名字为单位进行输入，而不是句子。再如，打购物清单的时候，也只有逐个物品的输入。所以，整句输入适应性差，不能很好地适应各种应用场景，是不完备的输入方式。</p><p>有鉴于以上原因，拼音输入应该以字词为单位而不是以句子为单位。实际上，除了极少数死心塌地的整句派，大多数人也是这么做的。先进行正确的分词，然后按字词进行输入，可以在一定程度上同时克服以上问题。在输入字词时可以适时地使用简拼，从而缩短码长，提高编码效率。字词的长度一般不会超过四个字，确认和回改的成本会大大降低，错误更容易发现和修改，残错率也会减小。</p><h3 id="_1-2-拼音输入改进" tabindex="-1">1.2 拼音输入改进 <a class="header-anchor" href="#_1-2-拼音输入改进" aria-label="Permalink to &quot;1.2 拼音输入改进&quot;">​</a></h3><p>通常，为了在使用拼音的情况克服以上问题，人们首先想到的可能就是采用双拼。但是，双拼的门槛还是不低，需要记住30来个韵母、3个翘舌声母和零声母的表示形式，而且仍然不能解决重码多的问题。同时，双拼能够节约的用键，被无法或者难以使用简拼的缺点部分抵消掉了。</p><p>声笔拼音则另辟蹊径，以全拼为基础，进行适当的变形，只需花费比双拼小得多的代价，就可以取得相当于甚至高于双拼的输入效率。声笔拼音是一种非常「奇特」的拼音输入法，它完全颠覆了人们对拼音输入法的认识，平均码长和重码大幅度减少，翻页键很少用得着，输入效率大大提升。</p><blockquote><p><em>声笔拼音三板斧，在传统拼音基础上实现三次大飞跃</em></p><ol><li>自由编码：缩短和变换拼式、直辅笔画</li><li>固定简码：截断固定、数选固定</li><li>顶功省键：优化路径、省略空格、快速回改</li></ol></blockquote><p><img src="'+t+'" alt="image-20230819091825507" loading="lazy"></p><h3 id="_1-3-适用人群" tabindex="-1">1.3 适用人群 <a class="header-anchor" href="#_1-3-适用人群" aria-label="Permalink to &quot;1.3 适用人群&quot;">​</a></h3><p>声笔拼音适合什么样的人使用呢？声笔拼音是对现有拼音输入法的优化和改进，所以它适用于正在用拼音输入中文的所有人，可以仅花费极小的代价就获得高得多的中文输入效率，而不必花更多的时间和精力去学习双拼甚至五笔等。声笔拼音将彻底改变人们对拼音输入时重码多、效率低的刻板印象，是最佳的拼音输入法升级方案。</p><p>如果您的拼音非常糟糕，声母分不清平翘舌，对韵母的掌握一塌糊涂，同时又想有一个简单高效的输入方案，那么强烈建议您使用声笔系列码中的<a href="./../sbjp/">声笔简拼</a>，它仅使用不分平翘舌的声母和五个笔画，就能取得与声笔拼音一样的输入效率。</p><h3 id="_1-4-内容介绍" tabindex="-1">1.4 内容介绍 <a class="header-anchor" href="#_1-4-内容介绍" aria-label="Permalink to &quot;1.4 内容介绍&quot;">​</a></h3><p>本文只涉及声笔系列码中的声笔拼音。有关声笔系列码的总体情况请参见<a href="./../about/">总体介绍</a>。有关下载、安装和配置的方法，请参见<a href="./../vzpz/">安装配置</a>。有关声笔系列码的发展历史，请参见<a href="./../fzlc/">发展历程</a>。对于一些常见问题的解答，请参见<a href="./../faq/">常见问题</a>。声笔系列码的其它输入方案详见各自的专题。</p><h2 id="_2-快速入门" tabindex="-1">2 快速入门 <a class="header-anchor" href="#_2-快速入门" aria-label="Permalink to &quot;2 快速入门&quot;">​</a></h2><h3 id="_2-1-编码规则" tabindex="-1">2.1 编码规则 <a class="header-anchor" href="#_2-1-编码规则" aria-label="Permalink to &quot;2.1 编码规则&quot;">​</a></h3><p>声笔拼音的编码元素为声母、韵母和笔画，具体表示方法与现行拼音输入法有一定的差异，请注意以下几点。</p><ol><li>冠零声：用v表示零声母，即作为以<code>a e o</code>开头的音节在形式上的声母。例如，<code>ai ei ou</code>就变成了<code>vai vei vou</code>。</li><li>去翘舌：不区分平、翘舌音，即省略<code>zh ch sh</code>中的<code>h</code>。例如，<code>zhou chao shi</code>就变成了<code>zou cao si</code>。</li><li>省介音：在声韵相拼的时候，声母<code>j q x</code>后接以<code> ia ie io</code>开头的韵母如 <code>ia ie iao ian iang iong</code> 时，要省略<code>i</code>。例如，传统拼音里的 <code>jie qiong xiang</code> 在声笔拼音里则变成 <code>je qon xan</code>。</li><li>截韵尾：音节长度超过3时，则截断为3。例如，<code>biao</code>变成<code>bia</code>，而<code>guan</code>变成<code>gua</code>。这也导致了不区分前后鼻音，即省略<code>ng</code>中的<code>g</code>。例如，<code>bang zong</code>就变成了<code>ban zon</code>。</li><li>去鼻音：将末尾的n置换成其前面的元音字母。例如，<code>bin</code>变成<code>bii</code>，而<code>xan</code>变成<code>xaa</code>。</li><li>理特例：将韵母 <code>er</code> 合并到 <code>e</code>，<code>ü</code> 合并到 <code>u</code>，<code>ê</code> 合并到<code>e</code>。例如，<code>er</code> 变成<code>ve</code>，<code>nü</code> 变成<code>nu</code>，而<code>ê</code>变成<code>ve</code>。特别注意，<code>ü</code> 没有像传统拼音输入法那样用 <code>v</code> 来代替。</li><li>纯音节：对，两字母的音节，在不知道笔画时，可用<code>&#39;</code>作为第三码来占位。例如，<code>li</code>变成<code>li&#39;</code>，<code>wo</code>变成<code>wo&#39;</code>。</li><li>补笔画：补充笔画直至码长为6，笔画不够时重复末笔；横竖撇捺折五个笔画用<code>eiuoa</code>来表示。例如，「笔」的拼音为bi，追加前3个笔画后编码为<code>biueou</code>。又如，「将」的音节为<code>jaa</code>，追加前两个笔画后的编码为<code>jaaoei</code>。再如，「乙」的音节为<code>yi</code>，而「乙」只有一个笔画，所以要重复三次才能形成编码<code>yiaaaa</code>。需要注意的是，在实际输入的时候，一般是不用6位全码的。</li></ol><p>通过以上简单的改造，就可以取得以下奇特的效果。</p><ul><li>拼写形式得到了缩短，例如：<code>zhuang</code>变成了<code>zua</code>，<code>miao</code>变成了<code>mia</code>。</li><li>可以直接追加笔画进行快速筛选，例如：<code>依yiu 衣yio 议yioa 艺yie</code>。虽然现有拼音输入法也可以用Tab来引导加笔画，但是只能作用于词组中的首字，而且增加了码长。</li><li>音节之间界线完全明确，在连续拼写的时候根本不需要使用隔音符排除歧义，例如：<code>xi&#39;anshi</code>变成了<code>xivaasi</code>。虽然现有拼音输入法也可以用单引号来隔音，但是增加了码长，同时也容易忘记使用。</li><li>降低了学习门槛，不再需要区分平翘舌和前后鼻音。虽然现有拼音输入法也可以设置模糊音，但是会影响汉字转换的准确性，而在声笔拼音中不会有这个问题，因为声笔拼音中不再保留翘舌音和后鼻音的拼式。</li></ul><p>下面我们通过一些例子来熟悉一下上述7条编码规则，对于每个字，依次加以运用这些规则就是了。当然，在熟悉以后，是不必每个规则都去用一下的，因为直觉会告诉你哪个或者哪些规则是适用的。</p><ol><li>声sheng：不是零声母音，不适用规则1；用规则2去除翘舌后，拼式变成seng；没有介音，不适用规则3；用规则4截去韵尾后，拼式变成sen；用规则5去掉鼻音后，拼式变成see；不是特例，不适用规则6；用规则7补充笔画后，拼式变成seeeie。</li><li>将jiang：不是零声母音，不适用规则1；不是翘舌音，不适用规则2；用规则3去掉介音后，拼式变成jang；用规则4截去韵尾后，拼式变成jan；用规则5去掉鼻音后，拼式变成jaa；不是特例，不适用规则6；用规则7补充笔画后，拼式变成jaaoei。</li><li>快kuai：不是零声母音，不适用规则1；不是翘舌音，不适用规则2；没有介音，不适用规则3；用规则4截去韵尾后，拼式变成kua；没鼻音，不适用规则5；不是特例，不适用规则6；用规则7补充笔画后，拼式变成kuaooi。</li><li>儿er：用规则1添加零声母后，拼式变成ver；规则2、3、4、5都不适用；用规则6后，拼式变成ve；用规则7后，拼式变成veuaaa。</li><li>虐nüe：规则1、2、3、4、5都不适用；用规则6后，拼式变成nue；用规则7后，拼式变成nueiea。</li><li>创chuang：用规则1后，拼式变成cuang；用规则4后，拼式变成cua；用规则7后，拼式变成cuauoa。</li></ol><h3 id="_2-2-助记方法" tabindex="-1">2.2 助记方法 <a class="header-anchor" href="#_2-2-助记方法" aria-label="Permalink to &quot;2.2 助记方法&quot;">​</a></h3><p>虽然声笔拼音已经简单，基本上没有什么学习门槛，但是为了进一步减轻初学者的记忆负担，在手机上提供了助记皮肤，可以长按<code>N</code>键打开或者关闭助记。在打开时，给出了笔画和零声母用键（<code>aeuio</code>和<code>v</code>）的提示，如下图所示。如果是在电脑上，则可以把该图放在电脑桌面上，在打字的时候帮助记忆，一般几分钟就记住了。</p><p><img src="'+r+'" alt="image-20230813150253295" loading="lazy"></p><h3 id="_2-3-基本输入" tabindex="-1">2.3 基本输入 <a class="header-anchor" href="#_2-3-基本输入" aria-label="Permalink to &quot;2.3 基本输入&quot;">​</a></h3><p>Tab和Shift Tab分别用于向前和向后翻页。Esc用于清除所有编码，退格键用于删除光标前的一个编码。首选项用空格上屏，重码项用23789上屏，而不是传统的123456，这样更便于操作，而且23789有时候是与笔画对应的。光标定位用1和0进行，重复按1逐字定位到未确定字的编码后，循环进行，按0则始终定位到所有编码的最后。在字数多于2时，可以用单引号直接定位到第二字的编码之后。</p><p>为了避免歧义和便于记忆，我们将用下列类似正则表达式的精简方式来描述顶功模式下字词的输入格式。其中，<code>s = [qwrtsdfgzxcvbyphjklnm]</code>表示声母，<code>b = [aeuio]</code>表示笔画，<code>y</code>表示韵母中的第一个字母（即次码），<code>x</code>表示韵母中的第二个字母或者追加的第一个笔画（即第三码），<code>*</code>表示按笔顺取零个或者多个，括号表示补码，大写的S表示声母需要用大写字母。</p><blockquote><p>单字：<code>sb, syxbbb</code></p><p>二字词：<code>s(yxbbb)syx</code></p><p>三字词：<code>s(yx)s(yxbbb)syx</code></p><p>四字词：<code>s(yx)s(yx)s(yxbbb)syx</code></p><p>五字及以上的词：<code>s(yx)s(yx)sS*(yxbbb)syx</code></p></blockquote><h3 id="_2-4-反查方法" tabindex="-1">2.4 反查方法 <a class="header-anchor" href="#_2-4-反查方法" aria-label="Permalink to &quot;2.4 反查方法&quot;">​</a></h3><p>在使用声笔拼音时，特别是在学习声笔拼音之初，有时会遇到不会打的字。怎么办呢？声笔程序提供了丰富的反查手段，可以通过笔画和一般拼音来反查编码，还可以采用字海两分来反查和输入非 GBK 汉字。</p><h4 id="_2-4-1-拼音反查" tabindex="-1">2.4.1 拼音反查 <a class="header-anchor" href="#_2-4-1-拼音反查" aria-label="Permalink to &quot;2.4.1 拼音反查&quot;">​</a></h4><p>在知道一般拼音而不知道字形时用 <code>a</code> 引导拼音反查。</p><p>例如，要反查「防」字的编码，就在输入 <code>a</code> 之后再输入它的拼音<code>fang</code>，所以实际的输入为 <code>afang</code>，结果如下图所示。反查出「防」字的编码为 <code>faaaio</code>。如果是多音字，那么就会有多个编码，如图中的「房」字就有 <code>faaoae</code> 和<code>paaoae</code> 两个编码。</p><p><img src="'+n+'" alt="image-20240705061303401" loading="lazy"></p><p>对于零声母字，如「案」字，在反查时除了用<code>a</code> 引导还需要在正常拼音的前面加 <code>v</code>，因为 an 是零声母音，所以实际的输入为 <code>avan</code>。在下图中提示出的<code>案vaaooa</code>，表示「案」字的编码为 <code>vaaooa</code>。</p><p><img src="'+g+'" alt="image-20240705061802901" loading="lazy"></p><h4 id="_2-4-2-笔画反查" tabindex="-1">2.4.2 笔画反查 <a class="header-anchor" href="#_2-4-2-笔画反查" aria-label="Permalink to &quot;2.4.2 笔画反查&quot;">​</a></h4><p>在完全不知道读音的时候，直接用 <code>aeuio</code> 按顺序输入笔画进行反查，无需引导。</p><p>在下面的笔画反查的例子中，不用引导而直接输入 <code>uuao</code> 后，出现了以这四个笔画开头的字。第一项是<code>反faauua</code>，表示「反」字的编码为 <code>faauua</code>。第二项为<code>般baauua pouuao paauua</code>，说明「般」是个多音字，有三个编码。</p><p><img src="'+m+'" alt="image-20240705084437753" loading="lazy"></p><h4 id="_2-4-3-两分反查" tabindex="-1">2.4.3 两分反查 <a class="header-anchor" href="#_2-4-3-两分反查" aria-label="Permalink to &quot;2.4.3 两分反查&quot;">​</a></h4><p>通过 i 引导的拼音还支持用字海两分法来进行反查， 支持查找八万多汉字，一般用于反查难读而易于两分的字或者输入 GBK 以外的字。GBK 以外的字，声笔拼音不提供正常编码，不能按正常方式输入，只能在两分查找到后选择输入。引导字母i可以理解为英文inquire（询问）的首字母，以便记忆</p><p>下面是字海两分法查找的例子。第一个例子是反查「龖」字的编码，在输入到第二部分拼音的第一码时就出来了。第二个例子是通过输入「尸」和「水」的拼音来反查「尿」的编码，输入了两部分完整的拼音。</p><p><img src="'+h+'" alt="image-20240705062008469" loading="lazy"></p><p><img src="'+_+'" alt="image-20240705062034581" loading="lazy"></p><p>对于非 GBK 字集里的「㕛」字，它是没有编码的，只能用两分法来输入，如下所示。</p><p><img src="'+u+'" alt="image-20240705085022495" loading="lazy"></p><h2 id="_3-字词输入" tabindex="-1">3 字词输入 <a class="header-anchor" href="#_3-字词输入" aria-label="Permalink to &quot;3 字词输入&quot;">​</a></h2><h3 id="_3-1-单字的输入" tabindex="-1">3.1 单字的输入 <a class="header-anchor" href="#_3-1-单字的输入" aria-label="Permalink to &quot;3.1 单字的输入&quot;">​</a></h3><p>使用纯顶模式时，单字的顶屏能力很强，从第二码就开始顶了，也就是说只有一简字需要空格上屏，其它首选字都可以省略空格。在混顶模式时，二三简字也不能顶屏。</p><h4 id="_3-1-1-实例一" tabindex="-1">3.1.1 实例一 <a class="header-anchor" href="#_3-1-1-实例一" aria-label="Permalink to &quot;3.1.1 实例一&quot;">​</a></h4><p>「我」是一简字，只需要声母w，要加空格上屏，在纯顶和混顶下都是这样的。</p><p><img src="'+b+'" alt="image-20240708174648251" loading="lazy"></p><h4 id="_3-1-2-实例二" tabindex="-1">3.1.2 实例二 <a class="header-anchor" href="#_3-1-2-实例二" aria-label="Permalink to &quot;3.1.2 实例二&quot;">​</a></h4><p>「给」是二简字，只需要声母g和首笔a（相当于输入格式中的sb）即可。如果后续其它字词如「你」的声母n，那么，「给」就会被顶上屏幕，从而节约空格键。</p><p><img src="'+q+'" alt="image-20240708174858078" loading="lazy"></p><h4 id="_3-1-3-实例三" tabindex="-1">3.1.3 实例三 <a class="header-anchor" href="#_3-1-3-实例三" aria-label="Permalink to &quot;3.1.3 实例三&quot;">​</a></h4><p>「洗」不属于一、二简字，在输入了xi后，读音就输完了，所以第三码用首笔o（相当于输入格式中的x）。这时，假设「洗」出现在首选了，那么就可被顶了。当然，因为调频的原因，xio上的首选字有可能不是「洗」，但毫不影响理解这里说的顶屏。</p><p><img src="'+y+'" alt="image-20240518075426041" loading="lazy"></p><h4 id="_3-1-4-实例四" tabindex="-1">3.1.4 实例四 <a class="header-anchor" href="#_3-1-4-实例四" aria-label="Permalink to &quot;3.1.4 实例四&quot;">​</a></h4><p>「素」字，假设在输入suee（相当于输入格式中的syxb）四码后出现在首选了，从而可以被顶。因为调频位在第三位上，下次再输入「素」字就很可能只需要sue三码了。</p><p><img src="'+x+'" alt="image-20240518075600776" loading="lazy"></p><h4 id="_3-1-5-实例五" tabindex="-1">3.1.5 实例五 <a class="header-anchor" href="#_3-1-5-实例五" aria-label="Permalink to &quot;3.1.5 实例五&quot;">​</a></h4><p>在同音字很多的时候，很可能就需要输入五码甚至六码，才能出现在首位。</p><p><img src="'+f+'" alt="image-20240518075633682" loading="lazy"></p><p><img src="'+z+'" alt="image-20240911024152138" loading="lazy"></p><h3 id="_3-2-二字词输入" tabindex="-1">3.2 二字词输入 <a class="header-anchor" href="#_3-2-二字词输入" aria-label="Permalink to &quot;3.2 二字词输入&quot;">​</a></h3><h4 id="_3-2-1-实例一" tabindex="-1">3.2.1 实例一 <a class="header-anchor" href="#_3-2-1-实例一" aria-label="Permalink to &quot;3.2.1 实例一&quot;">​</a></h4><p>「我们」一词，输入两码后就出现在首选了，这时需要空格上屏。</p><p><img src="'+k+'" alt="image-20240518075922690" loading="lazy"></p><h4 id="_3-2-2-实例二" tabindex="-1">3.2.2 实例二 <a class="header-anchor" href="#_3-2-2-实例二" aria-label="Permalink to &quot;3.2.2 实例二&quot;">​</a></h4><p>「外贸」一词，输入三码后，就出现在首选了，可以顶屏，如下所示。</p><p><img src="'+P+'" alt="image-20240518080119762" loading="lazy"></p><h4 id="_3-2-3-实例三" tabindex="-1">3.2.3 实例三 <a class="header-anchor" href="#_3-2-3-实例三" aria-label="Permalink to &quot;3.2.3 实例三&quot;">​</a></h4><p>「干洗」一词，在输入至少三码以后，只要「干洗」出现在首位，就可以顶屏。</p><p><img src="'+v+'" alt="image-20240518080301352" loading="lazy"></p><h3 id="_3-3-三字词输入" tabindex="-1">3.3 三字词输入 <a class="header-anchor" href="#_3-3-三字词输入" aria-label="Permalink to &quot;3.3 三字词输入&quot;">​</a></h3><h4 id="_3-3-1-实例一" tabindex="-1">3.3.1 实例一 <a class="header-anchor" href="#_3-3-1-实例一" aria-label="Permalink to &quot;3.3.1 实例一&quot;">​</a></h4><p>「计算机」一词，输入jsji后，该词已是首选，处于顶屏位，也可以被顶。</p><p><img src="'+j+'" alt="image-20240518080324410" loading="lazy"></p><h4 id="_3-3-2-实例二" tabindex="-1">3.3.2 实例二 <a class="header-anchor" href="#_3-3-2-实例二" aria-label="Permalink to &quot;3.3.2 实例二&quot;">​</a></h4><p>「脚手架」一词，输入jsja后，并没有出现在首选，可以数选上屏，也可以继续输入末字的编码。</p><p><img src="'+S+'" alt="image-20240518080746737" loading="lazy"></p><p><img src="'+T+'" alt="image-20240911025011231" loading="lazy"></p><p>想要的词还没有出现在首选，可以进行补码，输入首字的韵母首字母后，「脚手架」就到首选了。</p><p><img src="'+B+'" alt="image-20240911025050811" loading="lazy"></p><h4 id="_3-3-3-实例三" tabindex="-1">3.3.3 实例三 <a class="header-anchor" href="#_3-3-3-实例三" aria-label="Permalink to &quot;3.3.3 实例三&quot;">​</a></h4><p>如果「击键率」一词，在末字输入了三码后，情况如下。</p><p><img src="'+w+'" alt="image-20240518084930397" loading="lazy"></p><p>由于候选项中没有「击键率」，于是回头追加首字的编码。</p><p><img src="'+G+'" alt="image-20240911025856024" loading="lazy"></p><p>发现已经没有三字词，开始出现二字词了，再补充第二字的编码。</p><p><img src="'+K+'" alt="image-20240911030142100" loading="lazy"></p><p>「击键」出现在候选项里了，用8选中它。</p><p>「率」可以用7选择，选中它就完成了输入过程，并造好了「击键率」这个词。</p><p><img src="'+$+'" alt="image-20240518085305915" loading="lazy"></p><h3 id="_3-4-四字词输入" tabindex="-1">3.4 四字词输入 <a class="header-anchor" href="#_3-4-四字词输入" aria-label="Permalink to &quot;3.4 四字词输入&quot;">​</a></h3><h4 id="_3-4-1-实例一" tabindex="-1">3.4.1 实例一 <a class="header-anchor" href="#_3-4-1-实例一" aria-label="Permalink to &quot;3.4.1 实例一&quot;">​</a></h4><p>「红光满面」一词，输入四码就是首选了，可以顶屏。</p><p><img src="'+N+'" alt="image-20240518085841426" loading="lazy"></p><h4 id="_3-4-2-实例二" tabindex="-1">3.4.2 实例二 <a class="header-anchor" href="#_3-4-2-实例二" aria-label="Permalink to &quot;3.4.2 实例二&quot;">​</a></h4><p>要输入「永生永世」，输入四码ysys，并没有出现首页。</p><p><img src="'+O+'" alt="image-20240518090002060" loading="lazy"></p><p>此时可以翻页查找。</p><p><img src="'+C+'" alt="image-20240518090031125" loading="lazy"></p><p>更好的办法是继续输入末字的第二码i（即「世」的韵母）后，该词出现在候选项中了，此时可以选择上屏。</p><p><img src="'+E+'" alt="image-20240518090245141" loading="lazy"></p><p>也可以在末字输入完三码后，回头补充首字编码，直到「永生永世」便成为首选，以便顶屏。</p><p><img src="'+A+'" alt="image-20240518090412588" loading="lazy"></p><h4 id="_3-4-3-实例三" tabindex="-1">3.4.3 实例三 <a class="header-anchor" href="#_3-4-3-实例三" aria-label="Permalink to &quot;3.4.3 实例三&quot;">​</a></h4><p>假设现在要输入「声笔系列」，发现在输入sbxl后，情况如下。</p><p><img src="'+D+'" alt="image-20240518090558447" loading="lazy"></p><p>没有发现该词，于是继续追加末字两码。</p><p><img src="'+J+'" alt="image-20240518090706789" loading="lazy"></p><p>由于候选项还是没有变化，所以再回头补充首字和次字的编码。</p><p><img src="'+M+'" alt="image-20240911030812147" loading="lazy"></p><p>这时，候选项中出现了「声笔」，选择后情况如下。</p><p><img src="'+R+'" alt="image-20240518090846758" loading="lazy"></p><p>候选项中「系列」也出现了，选择后，「声笔系列」上屏，同时造好了这个四字词。</p><h3 id="_3-5-多字词输入" tabindex="-1">3.5 多字词输入 <a class="header-anchor" href="#_3-5-多字词输入" aria-label="Permalink to &quot;3.5 多字词输入&quot;">​</a></h3><p>五字及以上的词称为多字词。</p><h4 id="_3-5-1-实例一" tabindex="-1">3.5.1 实例一 <a class="header-anchor" href="#_3-5-1-实例一" aria-label="Permalink to &quot;3.5.1 实例一&quot;">​</a></h4><p>「床前明月光」，在输入完四码后，由于有长词联想功能，它可能会已经出现在候选项中。</p><p><img src="'+U+'" alt="image-20240911031045276" loading="lazy"></p><p>如果想将它提前到首选，只需要大写输入第五字声母即可，注意提示的编码仍然是小写的。</p><p><img src="'+V+'" alt="image-20240518091056896" loading="lazy"></p><h4 id="_3-5-2-实例二" tabindex="-1">3.5.2 实例二 <a class="header-anchor" href="#_3-5-2-实例二" aria-label="Permalink to &quot;3.5.2 实例二&quot;">​</a></h4><p>假设现在要输入「声笔系列码」，其过程如下，包括补码和组词操作。</p><p><img src="'+W+'" alt="image-20240911031822488" loading="lazy"></p><p><img src="'+Z+'" alt="image-20240911032117579" loading="lazy"></p><p><img src="'+F+'" alt="image-20240911032159466" loading="lazy"></p><p><img src="'+H+'" alt="image-20240911032231699" loading="lazy"></p><p>此时，如果后面还要输入「是」字，那么输入s就会将「声笔系列码」顶上屏幕，并造好该词。 整个造词过程犹如行云流水，与常规的输入过程几乎是合而为一了。</p><h4 id="_3-5-3-实例三" tabindex="-1">3.5.3 实例三 <a class="header-anchor" href="#_3-5-3-实例三" aria-label="Permalink to &quot;3.5.3 实例三&quot;">​</a></h4><p>如果已知某个五字及以上的长词在系统中没有而需要新造，那么采用输入首码后按Shift+Tab（手机是上滑Tab）进入缓冲模式来造词是最好的，这时只需要拆开后输入一遍这个长词即可，而不必先输入所有的声母再回头补码。</p><p>例如，要输入「顶功输入高手」，缓冲造词的情况如下。</p><p><img src="'+I+'" alt="image-20240911032854881" loading="lazy"></p><p><img src="'+L+'" alt="image-20240911033004653" loading="lazy"></p><p><img src="'+Q+'" alt="image-20240911033051975" loading="lazy"></p><p>这时空格并不会上屏，而是会停留在缓冲区中。</p><p><img src="'+X+'" alt="image-20240911033127189" loading="lazy"></p><p>需要再次空格才能上屏，同时退出缓冲模式，当然也造好了这个长词。再次输入的时候，只需要前四码就会因为长词联想而出现在候选项中。</p><p><img src="'+Y+'" alt="image-20240911033553068" loading="lazy"></p><h2 id="_4-数标固定" tabindex="-1">4 数标固定 <a class="header-anchor" href="#_4-数标固定" aria-label="Permalink to &quot;4 数标固定&quot;">​</a></h2><p>除了一、二简字词外，声笔拼音还有大量固定的数选字词以及少量标点字词，包括210个声数字、42个声标字、210个声笔标字和4410个声声数词，它们有助于提高声笔拼音的可盲打性，从而提高输入效率。固定字词分为有理的和无理的两组，默认情况下只提示有理组，可以设置为同时提示无理组，以下示例是设置为同时提示无理组的情况。有理组用23789代表折横撇竖捺，而无理组用<code>;&#39;14560</code>进行选择，与笔画无关。</p><p>例如，在输入z后，如果直接输入<code>;&#39;14560</code>将顺序选择「最 再 展 之 作 主 则」几个字。</p><p><img src="'+e+'" alt="image-20250105115715469" loading="lazy"></p><p>又如，在输入zy后，如果直接输入<code>14560</code>将顺序选择「怎样 重要 只要 主要 终于」五个词。其中，1可以换用单引号，而0可以换用Tab。</p><p><img src="'+o+'" alt="image-20250105120029710" loading="lazy"></p><h2 id="_5-组合固定" tabindex="-1">5 组合固定 <a class="header-anchor" href="#_5-组合固定" aria-label="Permalink to &quot;5 组合固定&quot;">​</a></h2><p>在输入三个声母时，首选项会变成二简词和一简字的固定组合，只有输入末字的第二码，才会开始检索三字词，从而可以在不增加用键的情况下减少人机交互，提高输入效率。</p><p><img src="'+aa+'" alt="image-20250330163635624" loading="lazy"></p><p><img src="'+ea+'" alt="image-20250330163649605" loading="lazy"></p><h2 id="_6-组合变换" tabindex="-1">6 组合变换 <a class="header-anchor" href="#_6-组合变换" aria-label="Permalink to &quot;6 组合变换&quot;">​</a></h2><p>变换操作用于输入一二简字、二简词之间的组合，熟悉后可以盲打，还可以用来规避重码。</p><blockquote><p>两个一简字的组合：<code>ss; =&gt; s_s_</code></p><p>一简字与二简词的组合：<code>sss; =&gt; s_ss_</code></p><p>一简字与二简字的组合：<code>ssb; =&gt; s_sb_</code></p><p>二简词与一简字的组合：<code>sssTab =&gt; ss_s_</code></p><p>三个一简字的组合：<code>sss&#39; =&gt; s_s_s_</code>，其中的单引号也可以换用Shift+空格</p><p>两个二简词的组合：<code>ssss; =&gt; ss_ss_</code></p><p>二简词与二简字的组合：<code>sssb; =&gt; ss_sb_</code></p><p>二简词与两个一简字的组合：<code>ssssShift+空格 =&gt; ss_s_s_</code></p></blockquote><h2 id="_7-长词联想" tabindex="-1">7 长词联想 <a class="header-anchor" href="#_7-长词联想" aria-label="Permalink to &quot;7 长词联想&quot;">​</a></h2><p>如果Rime的前端支持1.11.0及以上的librime，而且未将translator的enable_completion设为false时，那么在输入四个声母后就可以进行长词联想。这样，在输入长词时就不必输入完所有的声母即可进行选择了。</p><p>例如，在输入zhrm后，也会同时检索出因此为前缀的长词，如下所示。</p><p><img src="'+i+'" alt="image-20240519100516168" loading="lazy"></p><p>同理，输入zhrmg后，会联想出更长的词组。</p><p><img src="'+p+'" alt="image-20240519100730514" loading="lazy"></p><h2 id="_8-自定词典" tabindex="-1">8 自定词典 <a class="header-anchor" href="#_8-自定词典" aria-label="Permalink to &quot;8 自定词典&quot;">​</a></h2><p>声笔拼音的所有固定字词，包括一简字、声笔字、声声词等，以及所有固定的数选字词，都是可以修改定制的，它们位于sbpy.fixed.txt文件中。您修改保存后，重新部署一下就可以生效。</p>',185)]))}const ga=c(oa,[["render",ia]]);export{na as __pageData,ga as default};
