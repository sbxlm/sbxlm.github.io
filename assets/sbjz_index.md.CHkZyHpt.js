import{_ as e,c as a,o,a5 as t}from"./chunks/framework.Bi0SQWLd.js";const f=JSON.parse('{"title":"声笔简整","description":"","frontmatter":{"title":"声笔简整","date":"2019-07-08T16:14:45.000Z","comments":false,"tags":["顶功","声笔","简整"],"typora-root-url":"..\\\\..\\\\public"},"headers":[],"relativePath":"sbjz/index.md","filePath":"docs/sbjz/index.md"}'),s={name:"sbjz/index.md"},i=t('<p>声笔简整是基于声笔简码的整句输入方案，它极其简单，没有什么学习门槛，可以用一句话概括它的内容：用v表示零声母，用<code>aeuio</code>分别表示折、横、撇、竖、点五种笔画，采用首字母简拼加笔画编码。新用户几分钟就可以学会，几小时就可以熟练掌握，稍加训练输入速度就可以上百。</p><p>声笔简整默认使用后置强顶模式，采用分词输入，与声笔简码的默认输入模式比较类似。输入的基本过程是，首先输入各字的声母，观察提示，首选命中则上屏，否则追加末字笔画，在追加的同时继续观察提示，命中则上屏。在追加末字两个笔画后，若首选还没有命中，则直接补充（无需移动光标）首字的笔画，在补充的同时继续观察，命中则上屏。相比声笔简码来说，</p><ul><li>声笔简整的优点是：具有大得多的词库，更大的词组编码空间，顺滑、精确的造词能力，与其它声笔整句方案共享词库，更加丰富的上屏模式，更低的学习门槛；</li><li>而它的缺点是：不支持三顶模式，不能兼容飞系单字，系统反应速度较慢，没有快速地枚举造词能力，输入长词的时候比较麻烦。</li></ul><p>声笔简整支持的输入模式与声笔拼音是完全一样的，只是单字的编码方式不一样而已。相比声笔拼音来说，</p><ul><li>声笔简整的优点是：无需使用韵母，学习门槛工更低；离散更好，效率更高；可更平滑地升迁到声笔飞系；</li><li>而它的缺点是：更多地依赖笔画，不能在大多数情况下只使用音，对习惯拼音的人来说，不太自然。</li></ul><h2 id="_1-举例说明" tabindex="-1">1 举例说明 <a class="header-anchor" href="#_1-举例说明" aria-label="Permalink to &quot;1 举例说明&quot;">​</a></h2><p>例子: 中文输入法是中文使用者的基础工具。</p><p>方法1: <code>中文zwoe 输入法srfo 是s_ 中文zwo 使用者syze 的d_ 基础jc_ 工具。gji.</code></p><p>方法2: <code>中文输入法zwsrF 是s_ 中文使用者zwsyZ 的d_ 基础工具。jcgj.</code></p><p>在例子中，方法1是分词颗粒度比较细的打法，而方法2是颗粒度比较粗的打法，下面会给出详细的操作过程。方法2是建立在已经使用过方法1的前提下的，类似于实际输入过程中，上文已经出现过类似的句子，所以可以通过更粗的分词了进一步压缩编码，从而节约用键。因为简整是动态调频的，用户的结果不一定会一模一样，但是并不妨碍对操作方法的理解。</p><p>使用方法1时，首先输入「中文」里两字的声母zw，观察首选不是「中文」（若能记住二简词，是不必观察的），于是追加「文」的首笔点o，还是未命中，再追加「文」的次笔横e，命中了。这时，不必空格上屏，而是接着输入「输入法」中第一个字「输」的声母s，「中文」会被顶上屏幕，接着输入「入法」的声母rf和「法」的首笔点o，首选就是「输入法」了。为什么输入三个声母后不进行观察呢？因为在默认模式下，三个声母对应的肯定是二简词和一简字的组合「虽然发」，肯定不是「输入法」，所以只需要在追加末字的首笔再观察提示。接下来，键入「是」的声母s，将「输入法」顶上屏幕，用空格键上屏一简字「是」，因为一简字是不能顶屏的。接着，输入zwo，即开始观察提示，因为简拼的二字词是三码起开始调频的，发现「中文」已经在首选。于是，键入syze，将「中文」顶上屏幕，发现首选就是所需的「使用者」。再键入d，将「使用者」顶上屏幕，并用空格上屏「的」字。然后，输入jc，发现「基础」已经是首选，二简词不能顶屏，所以用空格上屏。最后，键入gj，二简词是「国家」，于是追加「具」的首笔竖i，命中了「工具」，直接键入句号顶屏，完成整句话的输入，包括句号本身。</p><p>使用方法2时，「中文输入法」的末字声母要用大写，否则小写的f会将前四个声母对应的词「中文输入」顶上屏幕。实际上，在默认的强顶模式下，大于五字的声母都要用大写来输入，这是编码规则。因为zwsrF对应的首选正好是「中文输入法」，所以接着键入s，就将其顶上屏幕了，然后再用空格上屏「是」字。类似地，输入zwsyZ，正好命中了「中文使用者」，键入d将其顶上屏幕，用空格上屏「的」字。最后，键入jcgj，发现首选没有命中，于是追加末字首笔i，首选变成了「基础工具」，直接句号顶屏，完成全句输入。</p><h2 id="_2-其它模式" tabindex="-1">2 其它模式 <a class="header-anchor" href="#_2-其它模式" aria-label="Permalink to &quot;2 其它模式&quot;">​</a></h2><p>前面介绍了声笔简整默认的后置强顶模式，它的输入效率最高，也最接近声笔简码默认的四顶模式。但是，对于习惯一般拼音整句输入法的人来说，可能会觉得很不习惯。所以，声笔简整还提供了自由、固定、混顶、纯顶几种其它模式供用户选择使用，或者用于过渡。</p><p>这些模式都可以配以前置和后置的选项。前置是传统拼音输入法的行为，编码前缀相同的字词，如果频率高，就会一直处在首选。而在后置时，已经在首选出现过的选项，在加码的时候后置，把机会留给频率紧随其后的字词，这样就能快速筛选出用户需要的重码字词了。所以，推荐用户尽量采用后置选项。</p><p>声笔简整的输入模式与声笔拼音是完全一样的，若需更详细地了解这些模式，可以参见<a href="./../sbpy/">声笔拼音</a>。由于声笔官方并不推荐用户使用声笔简整的非默认模式，所以这里就不介绍它们了。</p>',16),p=[i];function r(c,_,d,l,n,h){return o(),a("div",null,p)}const m=e(s,[["render",r]]);export{f as __pageData,m as default};
