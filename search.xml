<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[声笔简码扩展编码优化]]></title>
    <url>%2F2019%2F10%2F03%2Fjmkzmsyh%2F</url>
    <content type="text"><![CDATA[问题在用声笔简码输入单字和二字词时，常常会有很多重码，初学者往往通过翻页来查找需要的字词。他们对声笔简码不熟悉，键速很慢，翻页和查找所占的时间比例不大，不会感到什么不方便。当用户对声笔简码逐步熟悉后，就会觉得翻页和查找占的时间比例越来越大，而宁可使用扩展编码。 然而，此前的声笔简码使用扩展编码时，仅仅显示那些在第四码时第一页没有显示的字词。所以，必须先确定四码时候选窗口中确实没有想要的字词，再使用扩展编码。当候选项比较多时，眼睛的频繁扫视仍然是很费时间和精力的。 措施对于熟手来说，只需要看编码窗口中的一项就行了。如果该项不是想要的字词，就直接追加两个笔画，基本上就没有重码选择的顾虑了。如果是嵌入显示的，用户只需要看插入光标处的内容即可。 本次的优化做到了在使用扩展编码进行重码过滤时，仅仅排除了第四码时显示的第一项，所以用户只需要判断这第一项是否是所需要的就行了，从而可以大大地加快用户的操作速度。]]></content>
      <tags>
        <tag>声笔简码</tag>
        <tag>扩展编码</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为各款输入法增加整句模式]]></title>
    <url>%2F2019%2F09%2F19%2FSentenceModes%2F</url>
    <content type="text"><![CDATA[现代主流的拼音输入法都采用整句模式，其特点是，没有复杂的编码规则，输入方式灵活多变，因而学习门坎非常低。当然，所谓的整句是指可以按整句来输入，不是说只能输入整句，以字词为单位输入也是可以的，不过使用空格来上屏的情况就很多了。按字词输入，用空格上屏对全拼来说是很自然的，但是对双拼来说就显得笨拙。 全拼整句可兼容简拼和混拼，可以设置模糊音。但是，音节的准确切分是一个比较大的问题。另一个更大的问题是用户可能养成不良的输入习惯。比如，有的用户只知道采用单字加联想来进行输入；有的用户输入二字词时习惯用一、二字的声母，然后就进行分页选重操作。殊不知，这些简单易用的操作方式，在进行大量的文本输入的时候，效率是非常低下的。并且，一旦形成习惯，就很难纠正，同时也没有人提醒他们那是低效的方式，他们的自我感觉还很好，因为他们根本就不知道还有更好的方式。考虑到输入法使用的频繁程度，这类用户在输入方面的时间浪费是惊人的。 双拼整句，可以比较自由地自定义声母和韵的组合方式，一方面可以缩短码长，另一方面可以改善手感。同时，也可以增加形码辅助或笔画筛选，从而减少重码。双拼整句也有自己的问题。首先，需要记忆双拼的翘舌声母、零声母和韵母的表示方法；如果采用形辅，则还要记忆形辅的编码。其次，不加形辅的话，重码很多，而加了形辅又会造成字码切分问题。 顶功编码做成整句输入法，即使随时添加任意个笔画辅助码都可以完全避免字码切分岐义。如果正常输入按照一字两键的方式，那么飞码和快码的126个两键字是完全确定的，可以在很大的程度上提高整句输入的准确性。简码可以构造两型整句方案，一型可以任意输入1至4码，另一型确定一、二简字，正常输入三码，必要时可用四码。声笔双拼和声笔星二可以确定一简字，正常按照一字两键输入，可以用1至2笔画进行辅助去重，也比一般的两码连打方案效果要好。 所以，声笔系列码现在增加了飞码整句、快码整句、简码整句1型、简码整句2型、声双整句和声二整句。 2019年9月24日，通过修改RIME程序实现了整句模式下的字母选重。所以，整句方案也做了一些调整，以便充分利用这个新的特性。简码整句的单字编码均改为sbb，1型可以任意输入1至3码，2型确定一简字和二简字，其它字用三码输入；两型简码整句都在三码时用aeiou来进行字母选重。其它非简码的整句输入方案，均采用两码一字的简便方法；有重码时，不再追加笔画辅助，而是直接利用aeiou来选择重码。]]></content>
      <tags>
        <tag>输入法</tag>
        <tag>整句模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[飞码和快码新增W型]]></title>
    <url>%2F2019%2F09%2F18%2FAddModeW%2F</url>
    <content type="text"><![CDATA[现有飞码S和快码S都是主单的输入法，在输入二字词和三字词时，重码很多，常常会有翻页操作，影响了用户的体验。在没有实现动态码长的情况下，是没有办法解决这个问题的。另一个问题是，有的用户不喜欢S型用大写字母参与编码。 群友尛羴提议将二字词的编码改为sbbsz五码，促发了我设计W型的飞码和快码。飞码W的编码格式具体如下。 单字：sb, spbbbx，两码起顶，含105个sb字二字词：s1b2b2s2z2x，不收录用单字可以在五码及以内输入的二字词三字词：s1b2b2s3z3x多字词：s1b2b2s3s0x 其中，z表示p或者b，0表示末字。快码W的编码格式与飞码W完全相同，只需将部首p换为韵母y就行了。 因为无论单字还是词组都是采用五码，所以用“五”的拼音首字母来命名此型输入法。它支持自动造词和字词重码的调频，有重码的时候，用aeiou进行字母选重。]]></content>
      <tags>
        <tag>飞码</tag>
        <tag>快码</tag>
        <tag>W型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[声笔系列码全面升级到8.5版]]></title>
    <url>%2F2019%2F09%2F10%2Fupgrade8-5%2F</url>
    <content type="text"><![CDATA[在声笔系列码定制版RIME支持字母选重后，现在完成了对声笔系列码的全面升级，并将版本号统一确定为8.5。这次升级的要点总结如下。 增加输入法的类型声笔飞码和声笔快码进一步细分为X、K和S三型。X型的以词组为主，单字三码起顶；K型的以字均码长短为特点，sb单字二码起顶，其它单字三码起顶；S型以单字为主，辅以词组，单字均二码起顶。X型和S型均支持自动造词和动态调频，而K型不支持自动造词，但仍支持动态调频。从易学性来讲，X型是最简单的，其次是S型的，最难的是K型。K型是用于竞速的，需要记住词组的级别才能实现高速盲打。日常使用的话，词组派的可能认为X型更舒服些，而单字派可能觉得S型更舒服些。当然，最好是能根据使用场景，切换使用三种类型的飞码，以充分利用它们各自的优势。 改变两个单字简码在声笔系列码中，一简字“m们”和二简字“mu么”几乎没有组词能力，不利于提高词组的离散性能，所以将它们改为了“m没”和“m名”，并将其它相关字的编码进行了调整。同时，将所有输入法的词组重新生成。对于声笔星二，则恢复其原来的单字编码方法，它的m上原来就是放的“没”字。 词库增加到20万此前的声笔系列码词库是基于微软拼音、现代汉语词典、新华字典和成语词典，并采用了北语词频。结果，在约14万词中，只有约5万匹配上的频度，剩余的词组被赋与了-1的频度。虽然，北语词频做得很科学，有分类词频，也有综合词频。但是，北语词频比较陈旧，不能很好都反应词频的变化情况。另外，使用的以上词典数据年代比较久远，很多新的词汇都缺乏。 为了解决以上问题，我结合使用了相对较新的（2012年的）搜狗词频数据。搜狗词频大于0的约有15万条词组，与原来的声笔系列码词组合并去重后，得到约20万词组。这些词组的具体情况为：二字词90330条，多字词110273条，共计200603条。将这些词组按北语词频和搜狗词频联合排序，并以北语词频为优先，在北语词频相同时再以搜狗词频排序。在最终码表中用的是搜狗词频，表现出的效果是：简码按联合频率设置，重码按搜狗频率排序。 声笔系列码各款输入法的具体收词情况，请移步声笔系列码的词库优化实验。 升级声笔简码原生程序修改声笔简码原生程序，与RIME程序同步反映一简字“们”和二简字“么”的变化，词库增大到20万，版本号改为8.5。]]></content>
      <tags>
        <tag>声笔系列码</tag>
        <tag>升级</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[声笔系列码的词库优化实验]]></title>
    <url>%2F2019%2F08%2F29%2Fcikuyh%2F</url>
    <content type="text"><![CDATA[面临的问题此前的声笔系列码词库是基于微软拼音、现代汉语词典、新华字典和成语词典，并采用了北语词频。结果，在约14万词中，只有约5万匹配上的频度，剩余的词组被赋与了-1的频度。虽然，北语词频做得很科学，有分类词频，也有综合词频。但是，北语词频比较陈旧，不能很好都反应词频的变化情况。另外，使用的以上词典数据年代比较久远，很多新的词汇都缺乏。 解决的方案为了解决以上问题，我又结合了相对较新的（2012年的）搜狗词频数据。搜狗词频大于0的约有15万条词组，与原来的声笔系列码词组合并去重后，得到约20万词组。这些词组的具体情况为：二字词90330条，多字词110273条，共计200603条。将这些词组按北语词频和搜狗词频联合排序，并以北语词频为优先，在北语词频相同时再以搜狗词频排序。在最终码表中用的是搜狗词频，表现出的效果是：简码按联合频率设置，重码按搜狗频率排序。 具体的实施声笔简码首先将这20万词组用于声笔简码，四码重码数限制在29以内，即5页以内，并留最后一个空码位以便加快造词过程。按联合词频的顺序舍弃词频最低的词组后得到二字词78098条，多字词110210条，共计188308条。为什么要对重码数进行限制呢？这是因为翻页过多会严重影响键速，而且RIME的在线造词产生的词组都是放在最后的，选择起来非常麻烦。 声笔飞码X声笔飞码X的词组没有截断简码，只有半有理的简码。它的词组编码与传统四码输入法类似，所以具有很大的四码空间，只需把重码数限制在11以内就行了。按搜狗词频舍弃低频词后，得到199923条词组。另外，在sbb空间安排与飞码K相同的525个三键高频二字词，并在此之外利用syb空闲空间安排69个高频二字词。最后，在sbs空间上放置1840个非强制的二字词，在sss空间上放置8100个非强制的三字词。 声笔飞码K声笔飞码K的词组采用分级收录的方法，不收录用单字输入时效率更高的词组，最长码为5，没有作重码数的限制，收二字词40082条。三字词和四字词不分级，分别收录45276条和64953条。另外，利用spb空闲空间安排69高频二字词。由于sb字开始的二字词按s1b1b2的规则只有523个，有两个空码位fei和qia，所以在它们上面分别安放“否则”和“曲线”两个不规则词，以充分利用空间。 声笔飞码S声笔飞码S在收录词组时，把重码数限制在11以内，收词151036条，包括二字词46287条，三字词39798条，多字词64951条。另外，利用spb空闲空间安排69高频二字词。 声笔快码X声笔快码X的词组没有截断简码，只有半有理的简码。它的词组编码与传统四码输入法类似，所以具有很大的四码空间，只需把重码数限制在11以内就行了。按搜狗词频舍弃低频词后，得到197459条词组。另外，在sbb空间安排与飞码K相同的525个三键高频二字词，并在此之外利用sy和syb空闲空间分别安排95个和589个高频二字词。最后，在sbs空间上放置1840个非强制的二字词，在sss空闲空间上放置8100个非强制的三字词。 声笔快码K声笔快码K的词组采用分级收录的方法，不收录用单字输入时效率更高的词组，最长码为5，没有作重码数的限制，收二字词77909条。三字词和四字词不分级，分别收录45243条和57734条。在sbb空间安排与飞码K相同的525个三键高频二字词，并在此之外利用sy和syb空闲空间分别安排95个和589个高频二字词。 声笔快码S声笔快码S在收录词组时，把重码数限制在11以内，收词152420条，包括二字词47671条，三字词39798条，多字词64951条。另外，利用sy和syb空闲空间分别安排95个和589个高频二字词。 声笔双拼声笔双拼是对传统自然码双拼的改造，它收四码词197456条，并利用sy和syb空闲空间安排了各166和963个高频二字词。最后，在sbs空间上放置XXXX个非强制的二字词，在sss空闲空间上放置8105个非强制的三字词。 声笔星二声笔星二的词组是对星二的改造，它收四码词组198797条，把重码数限制在11以内，并利用sd和sdb空闲空间安排了各62和517个高频二字词。最后，在sbs空间上放置1848个非强制的二字词，在sss空闲空间上放置8097个非强制的三字词。]]></content>
      <tags>
        <tag>优化</tag>
        <tag>声笔系列码</tag>
        <tag>词库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[飞码（X）和快码（X）的优化实验]]></title>
    <url>%2F2019%2F08%2F15%2Ffmkmyh%2F</url>
    <content type="text"><![CDATA[存在的问题在8.00的飞码（X）和快码（X）中，sbb和sbbb只是简单地放了声笔字，实际上几乎没投入使用，非常浪费。特别是在新增的飞码X和快码X中，因为没有sbbs型的二字词，sbb是只需要三键的短码空间，不好好利用的话，实在可惜。同时，飞码（X）中有少量spb短码空间是空闲的，而在快码（X）中存在着不少的sy和大量的syb短码空闲空间。 RIME版飞码（X）和快码（X）面临的另一个问题是，105个sb型简码字没有原生版那样的提示，初学者必须死记。 短码空间的利用飞码（X）首先，利用spb空闲空间。从声笔简码的二字词中抽出高频的填入该空间，脚本如下。 1234567select zici = rtrim(zici), bianma = left(bianma,3), chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere changdu = 3 and left(bianma,3) not in (select bianma = left(a.bianma,3)from spdanz aright join sbjerz b on left(a.bianma,3) = left(b.bianma,3)where a.changdu = 3 and b.changdu = 3)order by chupin desc 一共抽取了67个ssb型的二字词，罗列其中的前10条如下。 12345678910那个 ngu 169294儿子 vza 61768任务 rwu 57310不好 bha 54085放心 fxo 46543若是 rsi 39942空中 kzi 25849吩咐 ffi 25347内心 nxo 25231暗中 vzi 23181 其次，利用sbb空间。对于飞码和飞码X，利用的方式是不一样的。 对于飞码，在sbb上安排非强制性二字词简码，其取码规则为s1b1b1，SQL脚本如下。 123456789select text=rtrim(zici), code=left(bianma,3)from spcizwhere xuhao in (select xuhao from (select bianma=left(bianma,3), xuhao=min(xuhao) from spcizwhere len(rtrim(zici)) = 2group by left(bianma,3)) tmp) 一共抽取了451个二字词，罗列其中的前10条如下。 12345678910告诉 gue声音 sei眼睛 yia一切 yee改革 gae朋友 pua研究 yeu代表 dui不禁 beu支持 zei 对于飞码X，在为sbb空间安排二字词时，不能包含已经为其抽取的spb型二字词，脚本如下。 12345678910111213141516select zici = rtrim(zici), bianma = left(bianma,1) + substring(bianma,3,2), chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere xuhao in (select xuhao from(select bianma = left(bianma,1) + substring(bianma,3,2), xuhao = min(xuhao) from sbjerzwhere rtrim(zici) not in (select zici from (select zici = rtrim(zici), bianma = left(bianma,3), chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere changdu = 3 and left(bianma,3) not in (select bianma = left(a.bianma,3)from spdanz aright join sbjerz b on left(a.bianma,3) = left(b.bianma,3)where a.changdu = 3 and b.changdu = 3)) tmp)group by left(bianma,1) + substring(bianma,3,2)) tmp2) 一共抽取了525个s1b2b2型的二字词，罗列其中的前10条如下。 12345678910一个 yuo 997773没有 meu 826617我们 wui 812417他们 tui 791018什么 sua 742524自己 zae 741012知道 zou 574771可以 kao 432546这个 zuo 404217就是 jia 376685 快码（X）首先，利用sy空闲空间。从声笔简码的二字词中抽出高频的填入该空间，脚本如下。 123456select zici = rtrim(zici), bianma = left(bianma,2), chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere changdu = 2 and left(bianma,2) not in (select bianma = left(a.bianma,2)from ybdanz aright join sbjerz b on left(a.bianma,2) = left(b.bianma,2)where a.changdu = 2 and b.changdu = 2) 一共抽取了95个ss型的二字词，罗列其中的前10条如下。 12345678910可以 ky 432546已经 yj 325164发展 fz 323016问题 wt 279209一定 yd 201525可能 kn 185841今天 jt 173941觉得 jd 172314姑娘 gn 168226一些 yx 165456 第二，利用syb空闲空间。从声笔简码的二字词中抽出高频的填入该空间，脚本如下。 1234567select zici = rtrim(zici), bianma = left(bianma,3), chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere changdu = 3 and left(bianma,3) not in (select bianma = left(a.bianma,3)from ybdanz aright join sbjerz b on left(a.bianma,3) = left(b.bianma,3)where a.changdu = 3 and b.changdu = 3)order by chupin desc 一共抽取了587个ssb型的二字词，罗列其中的前10条如下。 12345678910一个 ygu 997773我们 wmu 812417起来 qle 330495还有 hye 191450一点 ydi 189033而且 vqi 176585一下 yxe 167905之间 zjo 139129下来 xle 134533眼睛 yji 133992 第三，利用sbb空间。对于快码和快码X，利用的方式是不一样的。 对于快码，在sbb上安排非强制性二字词简码，其取码规则为s1b1b1，SQL脚本如下。 123456789select text=rtrim(zici), code=left(bianma,3)from ybcizwhere xuhao in (select xuhao from (select bianma=left(bianma,3), xuhao=min(xuhao) from ybcizwhere len(rtrim(zici)) = 2group by left(bianma,3)) tmp) 一共抽取了454个二字词，罗列其中的前10条如下。 12345678910经济 jaa社会 soa世界 sei市场 soe开始 kee技术 jei希望 xuo表示 bee改革 gae国际 gia 对于快码X，在为sbb空间安排二字词时，不能包含已经为其抽取的sy和syb型二字词，脚本如下。 123456789101112131415161718192021222324select zici = rtrim(zici), bianma = left(bianma,1) + substring(bianma,3,2),chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere xuhao in (select xuhao from(select bianma = left(bianma,1) + substring(bianma,3,2), xuhao = min(xuhao) from sbjerzwhere rtrim(zici) not in (select zici from (select zici = rtrim(zici), bianma = left(bianma,2),chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere changdu = 2 and left(bianma,2) not in (select bianma = left(a.bianma,2)from ybdanz aright join sbjerz b on left(a.bianma,2) = left(b.bianma,2)where a.changdu = 2 and b.changdu = 2)unionselect zici = rtrim(zici), bianma = left(bianma,3),chupin = case chupin when -1 then 0 else chupin end from sbjerzwhere changdu = 3 and left(bianma,3) not in (select bianma = left(a.bianma,3)from ybdanz aright join sbjerz b on left(a.bianma,3) = left(b.bianma,3)where a.changdu = 3 and b.changdu = 3)) tmp)group by left(bianma,1) + substring(bianma,3,2)) tmp2) 一共抽取了525个s1b2b2型的二字词，罗列其中的前10条如下。 12345678910没有 meu 826617他们 tui 791018什么 sua 742524自己 zae 741012知道 zou 574771这个 zuo 404217就是 jia 376685中国 zia 336314这样 zei 328523因为 you 317518 公共无论是飞码（X）还是快码（X），都还要利用sbbbx空间。将sbbb空间用于声笔单字输入，只有1、2级强制简码，重码字用aeiou来选择。声笔单字供用户在不知道偏旁部首或韵母时使用。‸ 对于非X型的，脚本如下： 123456789select zici = rtrim(zici), bianma = left(bianma,changdu),chupin, stem = left(bianma,4) + upper(left(bianma,1))from sbdanz where changdu &lt;= 2unionselect zici = rtrim(zici), bianma = left(bianma,4),chupin = case chupin when -1 then 0 else chupin end,stem = left(bianma,4) + upper(left(bianma,1))from sbdanz where changdu &gt; 2order by chupin desc 对于X型的，由于正码的单字码表中已经包含了1、2级简码，并且不再需要构词码，所以脚本如下： 123select zici = rtrim(zici), bianma = left(bianma,4),chupin = case chupin when -1 then 0 else chupin endfrom sbdanz where changdu &gt; 2 105个sb简码字的提示制作一个滤镜供飞码（X）和快码（X）使用，包括sb105.txt和sb105.json，放在Rime的OpenCC子文件夹中。 sb105.txt的内容如下： 123456789101112131415161718192021不 &amp;nbsp边a&amp;nbsp把e&amp;nbsp别i&amp;nbsp部o&amp;nbsp白u&amp;nbsp出 &amp;nbsp除a&amp;nbsp成e&amp;nbsp此i&amp;nbsp次o&amp;nbsp从u&amp;nbsp的 &amp;nbsp对a&amp;nbsp大e&amp;nbsp当i&amp;nbsp道o&amp;nbsp得u&amp;nbsp发 &amp;nbsp飞a&amp;nbsp夫e&amp;nbsp非i&amp;nbsp方o&amp;nbsp分u&amp;nbsp个 &amp;nbsp给a&amp;nbsp过e&amp;nbsp国i&amp;nbsp高o&amp;nbsp公u&amp;nbsp和 &amp;nbsp好a&amp;nbsp还e&amp;nbsp回i&amp;nbsp话o&amp;nbsp会u&amp;nbsp就 &amp;nbsp经a&amp;nbsp进e&amp;nbsp见i&amp;nbsp家o&amp;nbsp几u&amp;nbsp可 &amp;nbsp孔a&amp;nbsp开e&amp;nbsp口i&amp;nbsp快o&amp;nbsp看u&amp;nbsp了 &amp;nbsp力a&amp;nbsp来e&amp;nbsp里i&amp;nbsp立o&amp;nbsp利u&amp;nbsp们 &amp;nbsp民a&amp;nbsp面e&amp;nbsp明i&amp;nbsp没o&amp;nbsp么u&amp;nbsp你 &amp;nbsp那a&amp;nbsp南e&amp;nbsp内i&amp;nbsp农o&amp;nbsp年u&amp;nbsp平 &amp;nbsp皮a&amp;nbsp破e&amp;nbsp品i&amp;nbsp怕o&amp;nbsp片u&amp;nbsp去 &amp;nbsp强a&amp;nbsp起e&amp;nbsp且i&amp;nbsp前o&amp;nbsp全u&amp;nbsp人 &amp;nbsp如a&amp;nbsp若e&amp;nbsp日i&amp;nbsp让o&amp;nbsp然u&amp;nbsp是 &amp;nbsp双a&amp;nbsp事e&amp;nbsp上i&amp;nbsp说o&amp;nbsp手u&amp;nbsp他 &amp;nbsp她a&amp;nbsp天e&amp;nbsp同i&amp;nbsp头o&amp;nbsp体u&amp;nbsp而 &amp;nbsp阿a&amp;nbsp二e&amp;nbsp暗i&amp;nbsp安o&amp;nbsp儿u&amp;nbsp我 &amp;nbsp维a&amp;nbsp无e&amp;nbsp晚i&amp;nbsp为o&amp;nbsp外u&amp;nbsp下 &amp;nbsp线a&amp;nbsp想e&amp;nbsp小i&amp;nbsp心o&amp;nbsp笑u&amp;nbsp一 &amp;nbsp也a&amp;nbsp有e&amp;nbsp眼i&amp;nbsp意o&amp;nbsp用u&amp;nbsp在 &amp;nbsp子a&amp;nbsp正e&amp;nbsp中i&amp;nbsp着o&amp;nbsp自u&amp;nbsp sb105.json的内容如下： 12345678910111213141516&#123; &quot;name&quot;: &quot;sb105&quot;, &quot;segmentation&quot;: &#123; &quot;type&quot;: &quot;mmseg&quot;, &quot;dict&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;file&quot;: &quot;sb105.txt&quot; &#125; &#125;, &quot;conversion_chain&quot;: [&#123; &quot;dict&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;file&quot;: &quot;sb105.txt&quot; &#125; &#125;]&#125; 另外，再创建为飞码、飞码X、快码和快码X分别创建一个配置文件：sbfm.custom.yaml, sbfmx.custom.yaml, sbkm.custom.yaml和sbkmx.custom.yaml，放在Rime文件夹中。这个几个文件的内容完全一样，如下所示。 12345678910111213141516patch: &quot;switches/@next&quot;: name: sb105 reset: 1 #初始状态,0关1开 &quot;engine/filters/@next&quot;: simplifier@sb105 sb105: opencc_config: sb105.json option_name: sb105 show_in_comment: true #开启编码滤镜 comment_format: #编码滤镜正则处理 - &quot;xform/&lt;br&gt;/\n/&quot; #编码滤镜内容换行 - &quot;xform/&amp;nbsp/ /&quot; #编码滤镜内容显示空格 tags: - abc tips: char #none无注释,char单字注释,all全部注释 完成以上步骤后，重新部署就可以生效。 在计算机上的声笔字提示效果如下： 在手机上的声笔字提示效果效果如下： 实验结果使用发现，开滤镜提示sb字后，导致一简字不能参与造词。还没有找到解决办法，只能暂时放弃滤镜。 结论保留码表优化结果，暂时放弃用滤镜提示声笔字的功能。]]></content>
      <tags>
        <tag>飞码</tag>
        <tag>快码</tag>
        <tag>优化</tag>
        <tag>飞码X</tag>
        <tag>快码X</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RIME版声笔双拼优化实验]]></title>
    <url>%2F2019%2F08%2F13%2Fsbspyh%2F</url>
    <content type="text"><![CDATA[利用单字的短码空闲空间由于现在的声笔双拼只考虑了规则编码，所以单字编码在码长为2和3时都有不少的短码空间是空闲的，非常浪费。利用这种空间的办法是，将声笔简码的ss和ssb型二字词插入到该空间中。这种词现在有1098个，频度最高的一些二字词及其编码和频度如下。 1234567891011121314151617181920一个 ygu 997773我们 wmu 812417什么 sm 742524起来 qle 330495因为 yw 317518现在 xz 315893怎么 zm 294900问题 wt 279209经济 jj 257865这么 zmu 225697这些 zx 225430一定 yd 201525如此 rci 194183一点 ydi 189033关系 gx 188400可能 kn 185841而且 vqi 176585心中 xzi 176312地方 df 173581姑娘 gn 168226 如果能充分使用上述简码二字词的话，对输入效率的提升是有帮助的，只是编码格式不一样，需要记忆。 另外，还有少量的sb和sbb型空间没有利用，如何利用？现在还没有考虑好。 利用词组的三码空闲空间目前，声笔双拼中，编码sss是空闲的。优化的措施是，把最常见的词组取前三码作为其简码放在sss空间中，同时也保留它们的全码。也就是说，这种简码不是强制性的。不过，如果用户利用了简码，并且如果四码上有重码词组的话，在选择重码后，重码的词组就可以提前，就会多产生一个四键词组，从而提高输入效率。这种简码词组共有一万多条，下面是一些例子。 12345678910111213141516171819202122没有 mzy 826617什么 sfm 742524自己 zij 741012知道 zid 574771可以 key 432546这个 zeg 404217中国 zsg 336314起来 qil 330495这样 zey 328523已经 yij 325164发展 faz 323016因为 ynw 317518现在 xmz 315893怎么 zfm 294900工作 gsz 287827问题 wft 279209经济 jyj 257865还是 hls 238983出来 cul 238047如果 rug 234912只是 zis 234730爱因斯坦 vys 233485 升级办法将新的sbsp.dict.yaml文件复制的用户文件夹覆盖原来的同名文件，然后将sbsp.userdb文件夹删除，再重新部署，就可以使用了。注意，删除sbsp.userdb文件夹后，你之前所造的词组和产生的调频信息就丢失了，只有重新再来一遍。因为码表有破坏性的变更，与用户数据不一致了，可能产生冲突，无法利用原有的用户数据，非常遗憾。]]></content>
  </entry>
  <entry>
    <title><![CDATA[声笔简码重磅发布]]></title>
    <url>%2F2019%2F08%2F04%2FReleaseSbjm%2F</url>
    <content type="text"><![CDATA[声笔简码已经通过了长期的准备、测试和优化，现在终于发布了！ 它是在声笔码和声笔飞码后，又一次输入法的创新，综合运用了很多独创的黑科技，包括连续字词混合顶屏、自动动态码长调整、精准自动造词、快捷字母选重、字词扩展编码、静态高频字词、字词编码分流、无切换码表反查等。 声笔简码也是对10多年顶功类输入法创新的综合运用，它将再一次对输入法的发展方向产生深远的影响。 更多详情，请移步声笔简码，或者直接下载原生程序或RIME程序。]]></content>
      <tags>
        <tag>顶功</tag>
        <tag>输入法</tag>
        <tag>声笔简码</tag>
        <tag>字母选重</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Rime的声笔系列码现在提供Android安装程序了]]></title>
    <url>%2F2019%2F07%2F23%2Frime4sbxlm%2F</url>
    <content type="text"><![CDATA[缘起在发布Weasel4sbxlm时，我就承诺过会尽快提供对Android的支持，现在就是兑现的时候了。由于增加了对Android的支持，所以名称也改为了Rime4sbxlm，意为基于Rime的声笔系列码。不过，此版程序实际上能兼容同版本号的官方小狼毫和同文，不会对已经安装的输入法方案产生影响。与官方程序的区别主要是，增加了对顶功输入法用小码集字母兼用于选择重码字词的支持。下载链接为：https://github.com/sbxlm/sbxlm.github.io/releases/download/20190723/Rime4sbxlm.rar Rime4sbxlm的主要内容 本Rime4sbxlm主要包括用于Windows和Android的安装程序，以及声笔飞码、声笔快码、声笔双拼和声笔星二码表和方案。 声笔飞码和声笔快码为二码起顶方案，强调单字的效率，同时支持sbbs二字词，但是不收录由三码及以内单字构成的二字词，这是因为这样才能充分利用狭小的二字词空间。另外，三码及以内的单字在熟练后击键率是很高的，也没有必要用二字词的方式来输入。本版飞码和快码还有一个重大改进，那就是三字词和多字词均可以用简拼的方式来输入（虽然要用一个大写字母），实现了二码顶与简拼的共存，这对输入成语等特别有帮助。 声笔双拼和声笔星二则是利用声笔技术分别对传统自然码和二笔输入法的改造，三级单字只用三键就可以输入，重码用aeiou来选择，而不是用笨拙的数字键。这样，它们不但变得更简单，而且效率还更高，操作还更容易。 安装方法在安装小狼毫和同文后，将公共部分和输入法部分的码表和方案复制到用户目录，重新部署并选择方案后就可以使用了。 下一步打算下一步会有一个重大的发布。声笔简码已经通过了长期的准备、测试和优化，也会在近期发布了。它将是在声笔码和声笔飞码后，又一次输入法的创新，综合运用了很多独创的黑科技，敬请期待。]]></content>
      <tags>
        <tag>输入法</tag>
        <tag>声笔系列码</tag>
        <tag>Rime</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[首个为声笔系列码定制的小狼毫输入法]]></title>
    <url>%2F2019%2F07%2F19%2Fweasel4sbxlm-0-14-3-0%2F</url>
    <content type="text"><![CDATA[热烈祝贺首个为声笔系列码定制的小狼毫输入法正式发布！顶功输入法现在虽然越来越火，但是现有的平台都有太多的局限性，无法让输入法玩家们玩出更多的花样。利用表示笔画的小码集字母aeiou进行选重是声笔系列码的黑科技之一，一直无法在RIME中实现。于是，我只得硬着头皮改了一下librime的源码，现在终于可以在小狼毫中使用了！当然，自动码长调整等其它声笔技术在RIME平台和其它输入法平台上仍然没有办法使用。不过，已经可以多一种玩法了。祝贺！祝贺！ 等不及了吗？赶快下载Weasel4Sbxlm吧。等一下！MacBook和Android怎么办了？少安毋躁，只有稍等一下了，后续再跟进。 本版输入法的主要内容公共部分 用于Windows的安装程序weasel4sbxlm-0.14.3.0.exe，增加了官方版没有字母选重的功能，仍然可以兼容官方版，不会影响已经有的输入法。 笔画码表（用于笔画反查码表）：bihua.dict.yaml和bihua.schema.yaml 拼音码表（用于拼音反查码表）：pinyin_simp.dict.yaml和pinyin_simp.schema.yaml 本文件：readme.txt 输入法部分这里的声笔飞码即原生程序中的飞码声形模式，而声笔快码则是声韵模式。以下编码格式中，s代表声母，p代表偏旁部首，b代表笔画，y代表韵母，d代表双笔，x代表选择键。 声笔飞码：sbfm.dict.yaml和sbfm.schema.yaml。它的编码格式：单字为spbbx, sbbbx；二字词为sbbsx；三字词为ssSx；多字词为sSssx。 声笔快码：sbkm.dict.yaml和sbkm.schema.yaml。它的编码格式与声笔飞码基本上相同，只需要把spbbx换为sybbx就行了。 声笔双拼：sbsp.dict.yaml和sbsp.schema.yaml。它的编码格式：单字为sybbx，二字词为sysyx，三字词为sssyx；多字词为ssssx。声笔双拼是基于自然码双拼改编的。 声笔星二：sbxv.dict.yaml和sbxv.schema.yaml。它的编码格式：单字为sdbbx，二字词为sdsdx，三字词为sssdx；多字词为ssssx。声笔星二是基于星空二笔改编的。 更多信息要知道更多的信息？请加入声笔系列码交流QQ群445906697。]]></content>
      <tags>
        <tag>输入法</tag>
        <tag>小狼毫</tag>
        <tag>声笔系列</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[主流输入法]]></title>
    <url>%2F2019%2F07%2F17%2Fmain-imes%2F</url>
    <content type="text"><![CDATA[输入法排行榜百度经验最好用的中文输入法十大排名多特输入法排行榜华军输入法排行榜 搜狗输入法搜狗输入法官方网站搜狗输入法百度百科 百度输入法百度输入法官方网站百度输入法百度百科]]></content>
      <tags>
        <tag>输入法</tag>
        <tag>主流</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[业界要文]]></title>
    <url>%2F2019%2F07%2F17%2Fkey-articles%2F</url>
    <content type="text"><![CDATA[王小川的互联网江湖：从输入法到AI背后的故事“我是1978年生的人，到今年是40岁，也是改革开放的同龄人。挺感谢这样一个大的时代背景，让自己成为了互联网飞速发展的见证者、参与者，也是受益者。” 具体请看http://news.gmw.cn/xinxi/2019-05/24/content_32864391.htm 搜狗王小川：翻译主场景不是翻译机，而是输入法与搜索从来没指望翻译机为搜狗提供支柱性收入来源，更大意义在于更多地从语言交互上实现AI落地扩展。 具体请看https://www.yicai.com/news/100096100.html 搜狗劫持百度神马等流量构成不正当竞争，3000万罚款创海淀法院同类案件最高纪录6月27日，海淀法院对奇虎公司、百度公司，以及动景公司和神马公司因搜狗输入法通过搜索候选词为搜狗搜索导流量分别起诉搜狗公司等不正当竞争纠纷三案集中宣判。法院一审认定搜狗公司构成不正当竞争，应停止不正当竞争行为，分别为三案原告公开消除影响，向奇虎公司、百度公司各赔偿经济损失500万元等，向动景公司和神马公司共赔偿2000余万元，系海淀法院同类案件罚款最高纪录。 具体请看https://www.yicai.com/news/100241684.html]]></content>
      <tags>
        <tag>业界</tag>
        <tag>要文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何关闭Wow64重定向？]]></title>
    <url>%2F2019%2F07%2F12%2Fdisable-redirect%2F</url>
    <content type="text"><![CDATA[先参见https://blog.csdn.net/karlxzy/article/details/42170419 现在声笔系列输入法的安装要先判断Windows是32位的还是64位的，再通过不同的安装程序来安装，用起来不是很方便。通过关闭Wow64重定向，就可以用一个32位程序同时解决64位和32位Windows输入法的安装问题。]]></content>
      <tags>
        <tag>关闭</tag>
        <tag>Wow64</tag>
        <tag>重定向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows下如何判断应用程序是32位的还是64位的？]]></title>
    <url>%2F2019%2F07%2F12%2Fwin32or64%2F</url>
    <content type="text"><![CDATA[方法一：利用任务管理器任务管理器 -&gt; 进程：进程后带有*32的是32位应用程序，否则为64位应用程序。此法仅适用于运行中的应用程序。 方法二：利用简化颜色模式鼠标右击应用程序 -&gt; 属性 -&gt; 兼容性：若设置框中的降低色彩和分辨率的选项可勾选则32位应用程序，否则为64位应用程序。 方法三：查看EXE文件头二进制方式打开应用程序，在文件头中能找到PE..L的是32位的，能找到PE..d的是64位。 来源：改编自https://blog.csdn.net/dayday3923/article/details/78597453]]></content>
      <categories>
        <category>Windows</category>
        <category>应用程序</category>
      </categories>
      <tags>
        <tag>应用程序</tag>
        <tag>32位</tag>
        <tag>64位</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Git的一些技巧]]></title>
    <url>%2F2019%2F07%2F05%2Fgit-tips%2F</url>
    <content type="text"><![CDATA[使用子模块在Git官网上，有针对子模块的专门说明，详见Git Submodules。 添加子模块比如，添加一个子模块DbConnector： 1$ git submodule add https://github.com/chaconinc/DbConnector 克隆带子模块的仓库123$ git clone https://github.com/chaconinc/MainProject$ git submodule init$ git submodule update 以上三个命令也可以用下面引命令代替： 1$ git clone --recursive git clone https://github.com/chaconinc/MainProject 删除子模块采用以下三个步骤：详见Stack Overflow。 123$ git submodule deinit -f -- a/submodule$ rm -rf .git/modules/a/submodule$ git rm -f a/submodule 使用多个账号如何在同一台计算机上使用多个Github账号？要点如下，详细方法见Stack Overflow。 步骤一：为first和second两个账号生成两个RSA密钥，名字分别为git_first和git_second。当然，这里的名字只是举例，你的名字肯定不一样。如果要用更多的账号，就需生成更多的密钥。 12$ ssh-keygen -t rsa -C "email-address1" # name it git_first when prompted$ ssh-keygen -t rsa -C "email-address2" # name it git_second when prompted 生成密钥后，将公钥里的内容，在对应的Github账号中设置好。 步骤二：创建config文件 123$ cd ~/.ssh$ touch config$ vim config config文件的内容如下。其中，第一个确定了默认的Host，后面的必须另外命名。 12345678Host github.com HostName github.com User git IdentityFile ~/.ssh/git_firstHost git_second HostName github.com User git IdentityFile ~/.ssh/git_second 步骤三、Github仓库repo1和repo2设置要使用的密钥。注意，@之后跟随的Host名称就是上面的config中设置的。 12$ git remote add origin git@github.com:first/repo1.git$ git remote add origin git@git_second:second/repo2.git 同步上游仓库的更新1234$ cd your/repo$ git remote add upstream http://github.com/your-account/upstream-repo.git$ git fetch upstream$ git pull origin master]]></content>
      <categories>
        <category>Git</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo建立Sbxlm网站]]></title>
    <url>%2F2019%2F07%2F03%2Fsite-build%2F</url>
    <content type="text"><![CDATA[安装Nodejs和Git根据不同的操作系统，按照通常的方式安装即可。 安装Hexo-cli1$ npm install -g hexo-cli 初始化Sbxlm-hexo12345$ hexo init sbxlm-hexo$ cd sbxlm-hexo$ git init$ npm install$ hexo server 添加NexT主题采用子模块的方式安装，以便今后获取上游的更新。 1$ git submodule add https://github.com/theme-next/hexo-theme-next themes/next 切换和修改NexT主题 修改sbxlm-hexo的_config.yml文件，将theme从默认的landscape改为next。 修改NexT的Scheme，从默认的Muse改为Gemini。]]></content>
      <tags>
        <tag>技巧</tag>
        <tag>Hexo</tag>
        <tag>Sbxlm</tag>
        <tag>网站</tag>
      </tags>
  </entry>
</search>
