<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[主流输入法]]></title>
    <url>%2F2019%2F07%2F17%2Fmain-imes%2F</url>
    <content type="text"><![CDATA[输入法排行榜百度经验最好用的中文输入法十大排名多特输入法排行榜华军输入法排行榜 搜狗输入法搜狗输入法官方网站搜狗输入法百度百科 百度输入法百度输入法官方网站百度输入法百度百科]]></content>
      <tags>
        <tag>主流</tag>
        <tag>输入法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[业界要文]]></title>
    <url>%2F2019%2F07%2F17%2Fkey-articles%2F</url>
    <content type="text"><![CDATA[王小川的互联网江湖：从输入法到AI背后的故事“我是1978年生的人，到今年是40岁，也是改革开放的同龄人。挺感谢这样一个大的时代背景，让自己成为了互联网飞速发展的见证者、参与者，也是受益者。” 具体请看http://news.gmw.cn/xinxi/2019-05/24/content_32864391.htm 搜狗王小川：翻译主场景不是翻译机，而是输入法与搜索从来没指望翻译机为搜狗提供支柱性收入来源，更大意义在于更多地从语言交互上实现AI落地扩展。 具体请看https://www.yicai.com/news/100096100.html 搜狗劫持百度神马等流量构成不正当竞争，3000万罚款创海淀法院同类案件最高纪录6月27日，海淀法院对奇虎公司、百度公司，以及动景公司和神马公司因搜狗输入法通过搜索候选词为搜狗搜索导流量分别起诉搜狗公司等不正当竞争纠纷三案集中宣判。法院一审认定搜狗公司构成不正当竞争，应停止不正当竞争行为，分别为三案原告公开消除影响，向奇虎公司、百度公司各赔偿经济损失500万元等，向动景公司和神马公司共赔偿2000余万元，系海淀法院同类案件罚款最高纪录。 具体请看https://www.yicai.com/news/100241684.html]]></content>
      <tags>
        <tag>业界</tag>
        <tag>要文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何关闭Wow64重定向？]]></title>
    <url>%2F2019%2F07%2F12%2Fdisable-redirect%2F</url>
    <content type="text"><![CDATA[先参见https://blog.csdn.net/karlxzy/article/details/42170419 现在声笔系列输入法的安装要先判断Windows是32位的还是64位的，再通过不同的安装程序来安装，用起来不是很方便。通过关闭Wow64重定向，就可以用一个32位程序同时解决64位和32位Windows输入法的安装问题。]]></content>
      <tags>
        <tag>关闭</tag>
        <tag>Wow64</tag>
        <tag>重定向</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows下如何判断应用程序是32位的还是64位的？]]></title>
    <url>%2F2019%2F07%2F12%2Fwin32or64%2F</url>
    <content type="text"><![CDATA[方法一：利用任务管理器任务管理器 -&gt; 进程：进程后带有*32的是32位应用程序，否则为64位应用程序。此法仅适用于运行中的应用程序。 方法二：利用简化颜色模式鼠标右击应用程序 -&gt; 属性 -&gt; 兼容性：若设置框中的降低色彩和分辨率的选项可勾选则32位应用程序，否则为64位应用程序。 方法三：查看EXE文件头二进制方式打开应用程序，在文件头中能找到PE..L的是32位的，能找到PE..d的是64位。 来源：改编自https://blog.csdn.net/dayday3923/article/details/78597453]]></content>
      <categories>
        <category>Windows</category>
        <category>应用程序</category>
      </categories>
      <tags>
        <tag>应用程序</tag>
        <tag>32位</tag>
        <tag>64位</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于Git的一些技巧]]></title>
    <url>%2F2019%2F07%2F05%2Fgit-tips%2F</url>
    <content type="text"><![CDATA[使用子模块在Git官网上，有针对子模块的专门说明，详见Git Submodules。 添加子模块比如，添加一个子模块DbConnector： 1$ git submodule add https://github.com/chaconinc/DbConnector 克隆带子模块的仓库123$ git clone https://github.com/chaconinc/MainProject$ git submodule init$ git submodule update 以上三个命令也可以用下面引命令代替： 1$ git clone --recursive git clone https://github.com/chaconinc/MainProject 删除子模块采用以下三个步骤：详见Stack Overflow。 123$ git submodule deinit -f -- a/submodule$ rm -rf .git/modules/a/submodule$ git rm -f a/submodule 使用多个账号如何在同一台计算机上使用多个Github账号？要点如下，详细方法见Stack Overflow。 步骤一：为first和second两个账号生成两个RSA密钥，名字分别为git_first和git_second。当然，这里的名字只是举例，你的名字肯定不一样。如果要用更多的账号，就需生成更多的密钥。 12$ ssh-keygen -t rsa -C "email-address1" # name it git_first when prompted$ ssh-keygen -t rsa -C "email-address2" # name it git_second when prompted 生成密钥后，将公钥里的内容，在对应的Github账号中设置好。 步骤二：创建config文件 123$ cd ~/.ssh$ touch config$ vim config config文件的内容如下。其中，第一个确定了默认的Host，后面的必须另外命名。 12345678Host github.com HostName github.com User git IdentityFile ~/.ssh/git_firstHost git_second HostName github.com User git IdentityFile ~/.ssh/git_second 步骤三、Github仓库repo1和repo2设置要使用的密钥。注意，@之后跟随的Host名称就是上面的config中设置的。 12$ git remote add origin git@github.com:first/repo1.git$ git remote add origin git@git_second:second/repo2.git 同步上游仓库的更新1234$ cd your/repo$ git remote add upstream http://github.com/your-account/upstream-repo.git$ git fetch upstream$ git pull origin master]]></content>
      <categories>
        <category>Git</category>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo建立Sbxlm网站]]></title>
    <url>%2F2019%2F07%2F03%2Fsite-build%2F</url>
    <content type="text"><![CDATA[安装Nodejs和Git根据不同的操作系统，按照通常的方式安装即可。 安装Hexo-cli1$ npm install -g hexo-cli 初始化Sbxlm-hexo12345$ hexo init sbxlm-hexo$ cd sbxlm-hexo$ git init$ npm install$ hexo server 添加NexT主题采用子模块的方式安装，以便今后获取上游的更新。 1$ git submodule add https://github.com/theme-next/hexo-theme-next themes/next 切换和修改NexT主题 修改sbxlm-hexo的_config.yml文件，将theme从默认的landscape改为next。 修改NexT的Scheme，从默认的Muse改为Gemini。]]></content>
      <tags>
        <tag>技巧</tag>
        <tag>Hexo</tag>
        <tag>Sbxlm</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我说Hello World好吗？]]></title>
    <url>%2F2019%2F07%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎Welcome来到to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartSorry, your browser does not support the video tag. Mathematic equations123$$\begin&#123;equation&#125;e=mc^2\end&#123;equation&#125;\label&#123;eq1&#125;$$ \begin{equation} e=mc^2 \end{equation}\label{eq1}Then, you can refer to this equation in your text easily by using something like: 1The famous matter-energy equation $\eqref&#123;eq1&#125;$ proposed by Einstein... Mermaid Examples graph LR 47(SAM.CommonFA.FMESummary)-->48(SAM.CommonFA.CommonFAFinanceBudget) 37(SAM.CommonFA.BudgetSubserviceLineVolume)-->48(SAM.CommonFA.CommonFAFinanceBudget) 35(SAM.CommonFA.PopulationFME)-->47(SAM.CommonFA.FMESummary) 41(SAM.CommonFA.MetricCost)-->47(SAM.CommonFA.FMESummary) 44(SAM.CommonFA.MetricOutliers)-->47(SAM.CommonFA.FMESummary) 46(SAM.CommonFA.MetricOpportunity)-->47(SAM.CommonFA.FMESummary) 40(SAM.CommonFA.OPVisits)-->47(SAM.CommonFA.FMESummary) 38(SAM.CommonFA.CommonFAFinanceRefund)-->47(SAM.CommonFA.FMESummary) 43(SAM.CommonFA.CommonFAFinancePicuDays)-->47(SAM.CommonFA.FMESummary) 42(SAM.CommonFA.CommonFAFinanceNurseryDays)-->47(SAM.CommonFA.FMESummary) 45(SAM.CommonFA.MetricPreOpportunity)-->46(SAM.CommonFA.MetricOpportunity) 35(SAM.CommonFA.PopulationFME)-->45(SAM.CommonFA.MetricPreOpportunity) 41(SAM.CommonFA.MetricCost)-->45(SAM.CommonFA.MetricPreOpportunity) 41(SAM.CommonFA.MetricCost)-->44(SAM.CommonFA.MetricOutliers) 39(SAM.CommonFA.ChargeDetails)-->43(SAM.CommonFA.CommonFAFinancePicuDays) 39(SAM.CommonFA.ChargeDetails)-->42(SAM.CommonFA.CommonFAFinanceNurseryDays) 39(SAM.CommonFA.ChargeDetails)-->41(SAM.CommonFA.MetricCost) 39(SAM.CommonFA.ChargeDetails)-->40(SAM.CommonFA.OPVisits) 35(SAM.CommonFA.PopulationFME)-->39(SAM.CommonFA.ChargeDetails) 36(SAM.CommonFA.PremetricCost)-->39(SAM.CommonFA.ChargeDetails) graph TD A[Christmas] -->|Get money| B(Go shopping) B --> C{Let me thinkssssssssssssssssssssssssssssssssssssssssssssssssssssss} C -->|One| D[Laptop] C -->|Two| E[iPhone] C -->|Three| F[Car] Create a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
