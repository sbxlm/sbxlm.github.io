{"version":3,"file":"worker.js","sources":["../node_modules/.pnpm/@libreservice+my-worker@0.4.2/node_modules/@libreservice/my-worker/dist/index.js","../node_modules/.pnpm/idb@8.0.0/node_modules/idb/build/index.js","../node_modules/.pnpm/@libreservice+lazy-cache@0.1.2_idb@8.0.0/node_modules/@libreservice/lazy-cache/dist/index.js","../src/worker.ts"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// src/LambdaWorker.ts\nvar TaskSkippedError = class extends Error {\n};\nvar RunningTaskSkippedError = class extends TaskSkippedError {\n  constructor(...params) {\n    super(...params);\n    this.name = \"RunningTaskSkippedError\";\n  }\n};\nvar PendingTaskSkippedError = class extends TaskSkippedError {\n  constructor(...params) {\n    super(...params);\n    this.name = \"PendingTaskSkippedError\";\n  }\n};\nvar RentedBuffer = class {\n  constructor(buffer) {\n    __publicField(this, \"buffer\");\n    this.buffer = buffer;\n  }\n};\nvar _scriptURL, _queue, _running, _commandHandlers, _setUp, setUp_fn, _run, run_fn, _next, next_fn, _schedule, schedule_fn, _killCurrent, killCurrent_fn;\nvar LambdaWorker = class {\n  /**\n   * @param scriptURL - The URL of the worker script\n   */\n  constructor(scriptURL) {\n    __privateAdd(this, _setUp);\n    __privateAdd(this, _run);\n    __privateAdd(this, _next);\n    __privateAdd(this, _schedule);\n    __privateAdd(this, _killCurrent);\n    __publicField(this, \"worker\");\n    __privateAdd(this, _scriptURL, void 0);\n    __privateAdd(this, _queue, []);\n    __privateAdd(this, _running, null);\n    __privateAdd(this, _commandHandlers, {});\n    __privateSet(this, _scriptURL, scriptURL);\n    this.worker = new Worker(scriptURL);\n    __privateMethod(this, _setUp, setUp_fn).call(this);\n  }\n  /**\n   * Registers a worker function in main thread.\n   *\n   * @param name - The function name\n   * @returns A wrapper function for the worker function of the name\n   */\n  register(name) {\n    return (...args) => new Promise((resolve, reject) => __privateMethod(this, _schedule, schedule_fn).call(this, { name, args, transferableIndices: [], resolve, reject }));\n  }\n  /**\n   * Skips the current function.\n   *\n   * @returns Whether a running function is skipped\n   */\n  skip() {\n    if (!__privateMethod(this, _killCurrent, killCurrent_fn).call(this)) {\n      return false;\n    }\n    this.worker = new Worker(__privateGet(this, _scriptURL));\n    __privateMethod(this, _setUp, setUp_fn).call(this);\n    __privateMethod(this, _next, next_fn).call(this);\n    return true;\n  }\n  /**\n   * Skips all functions.\n   *\n   * @returns Whether any functions are skipped\n   */\n  skipAll() {\n    if (!__privateMethod(this, _killCurrent, killCurrent_fn).call(this)) {\n      return false;\n    }\n    for (const { reject } of __privateGet(this, _queue)) {\n      reject(new PendingTaskSkippedError(\"Pending task skipped.\"));\n    }\n    __privateSet(this, _queue, []);\n    this.worker = new Worker(__privateGet(this, _scriptURL));\n    __privateMethod(this, _setUp, setUp_fn).call(this);\n    return true;\n  }\n  /**\n   * Set callback when receiving signal from a control function.\n   *\n   * @param name - The name of the control function\n   * @param callback The callback\n   */\n  control(name, callback) {\n    __privateGet(this, _commandHandlers)[name] = callback;\n  }\n};\n_scriptURL = new WeakMap();\n_queue = new WeakMap();\n_running = new WeakMap();\n_commandHandlers = new WeakMap();\n_setUp = new WeakSet();\nsetUp_fn = function() {\n  this.worker.onmessage = (msg) => {\n    const { type } = msg.data;\n    if (type === \"control\") {\n      const { name, args } = msg.data;\n      const handler = __privateGet(this, _commandHandlers)[name];\n      if (handler) {\n        handler(...args);\n      } else {\n        console.warn(`No handler for command ${name}`);\n      }\n    } else {\n      const { args, transferableIndices, resolve, reject } = __privateGet(this, _running);\n      __privateSet(this, _running, null);\n      __privateMethod(this, _next, next_fn).call(this);\n      if (type === \"success\") {\n        const { result, transferables } = msg.data;\n        transferables.forEach((arrayBuffer, i) => {\n          args[transferableIndices[i]].buffer = arrayBuffer;\n        });\n        resolve(result);\n      } else {\n        const { name, message } = msg.data.error;\n        const error = new Error(message);\n        error.name = name;\n        reject(error);\n      }\n    }\n  };\n};\n_run = new WeakSet();\nrun_fn = function(task) {\n  const { name, args, transferableIndices } = task;\n  const transferables = [];\n  const unwrappedArgs = args.map((arg, i) => {\n    if (arg && arg.constructor === RentedBuffer) {\n      transferableIndices.push(i);\n      transferables.push(arg.buffer);\n      return arg.buffer;\n    }\n    return arg;\n  });\n  __privateSet(this, _running, task);\n  this.worker.postMessage({ name, args: unwrappedArgs, transferableIndices }, transferables);\n};\n_next = new WeakSet();\nnext_fn = function() {\n  if (__privateGet(this, _queue).length) {\n    const task = __privateGet(this, _queue).shift();\n    __privateMethod(this, _run, run_fn).call(this, task);\n  }\n};\n_schedule = new WeakSet();\nschedule_fn = function(task) {\n  if (__privateGet(this, _running)) {\n    __privateGet(this, _queue).push(task);\n  } else {\n    __privateMethod(this, _run, run_fn).call(this, task);\n  }\n};\n_killCurrent = new WeakSet();\nkillCurrent_fn = function() {\n  if (!__privateGet(this, _running)) {\n    return false;\n  }\n  this.worker.terminate();\n  const { reject } = __privateGet(this, _running);\n  reject(new RunningTaskSkippedError(\"Running task skipped.\"));\n  __privateSet(this, _running, null);\n  return true;\n};\n\n// src/LambdaWrapper.ts\nfunction expose(functions, readyPromise) {\n  self.onmessage = async (msg) => {\n    await readyPromise;\n    const { name, args, transferableIndices } = msg.data;\n    const transferables = [];\n    let data;\n    try {\n      const workerFunction = functions[name];\n      if (typeof workerFunction !== \"function\") {\n        console.error(`${name} is not an exposed worker function`);\n        self.close();\n        return;\n      }\n      const result = await workerFunction(...args);\n      args.forEach((arg, i) => transferableIndices.includes(i) && transferables.push(arg));\n      data = { type: \"success\", result, transferables };\n    } catch (error) {\n      const { message, name: name2 } = error;\n      data = {\n        type: \"error\",\n        error: {\n          message,\n          name: name2\n        }\n      };\n    }\n    self.postMessage(data, transferables);\n  };\n}\nfunction control(name) {\n  return (...args) => {\n    const data = {\n      type: \"control\",\n      name,\n      args\n    };\n    self.postMessage(data);\n  };\n}\nfunction loadWasm(script, options) {\n  options = options || {};\n  const { url, init } = options;\n  return new Promise((resolve) => {\n    self.Module = {\n      ...options?.Module,\n      async onRuntimeInitialized() {\n        init && await init();\n        resolve(null);\n      },\n      locateFile(path, prefix) {\n        return (url || prefix) + path;\n      }\n    };\n    importScripts((url || \"\") + script);\n  });\n}\n\n// src/AsyncFS.ts\nfunction fsOperate(operation, ...args) {\n  const result = Module.FS[operation](...args);\n  if (operation === \"mkdir\") {\n    return;\n  }\n  return result;\n}\nfunction asyncFS(worker) {\n  const fsOperate2 = worker.register(\"fsOperate\");\n  return new Proxy({}, {\n    get(target, prop) {\n      return (...args) => fsOperate2(prop, ...args);\n    }\n  });\n}\nexport {\n  LambdaWorker,\n  PendingTaskSkippedError,\n  RentedBuffer,\n  RunningTaskSkippedError,\n  TaskSkippedError,\n  asyncFS,\n  control,\n  expose,\n  fsOperate,\n  loadWasm\n};\n//# sourceMappingURL=index.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { openDB } from 'idb';\nconst HASH = 'hash';\nconst CONTENT = 'content';\nclass LazyCache {\n    dbPromise;\n    constructor(name) {\n        this.dbPromise = openDB(name, 1, {\n            upgrade(db) {\n                db.createObjectStore(HASH);\n                db.createObjectStore(CONTENT);\n            }\n        });\n    }\n    async getDB() {\n        return this.dbPromise.catch(() => undefined); // not available in Firefox Private Browsing\n    }\n    async get(key, hash, url) {\n        const db = await this.getDB();\n        const storedHash = await db?.get(HASH, key);\n        if (storedHash === hash) {\n            return db.get(CONTENT, key);\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`Fail to download ${key}`);\n        }\n        const buffer = await response.arrayBuffer();\n        await db?.put(CONTENT, buffer, key);\n        await db?.put(HASH, hash, key);\n        return buffer;\n    }\n    async invalidate() {\n        const db = await this.getDB();\n        return db?.clear(HASH);\n    }\n}\nexport { HASH, CONTENT, LazyCache };\n//# sourceMappingURL=index.js.map","import { expose, control, loadWasm, fsOperate } from '@libreservice/my-worker'\nimport { LazyCache } from '@libreservice/lazy-cache'\nimport schemaName from '../schema-name.json'\nimport schemaFiles from '../schema-files.json'\nimport schemaTarget from '../schema-target.json'\nimport dependencyMap from '../dependency-map.json'\nimport targetFiles from '../target-files.json'\nimport targetVersion from '../target-version.json'\n\nconst RIME_USER = '/rime'\nconst RIME_SHARED = '/usr/share/rime-data'\n\nfunction getURL (target: string, name: string) {\n  if ('__RIME_CDN__') { // eslint-disable-line no-constant-condition\n    return '__RIME_CDN__' + `${target}@${(targetVersion as {[key: string]: string})[target]}/${name}`\n  }\n  return `ime/${target}/${name}`\n}\n\nconst lazyCache = new LazyCache('ime')\n\nasync function fetchPrebuilt (schemaId: string) {\n  const fetched: string[] = []\n  function getFiles (key: string) {\n    if (fetched.includes(key)) {\n      return []\n    }\n    fetched.push(key)\n    const files: {\n      name: string\n      md5: string\n      target: string\n    }[] = []\n\n    for (const dependency of (dependencyMap as {[key: string]: string[] | undefined})[key] || []) {\n      files.push(...getFiles(dependency))\n    }\n    const { dict, prism } = (schemaFiles as {[key: string]: { dict?: string, prism?: string }})[key]\n    const dictionary = dict || key\n    const tableBin = `${dictionary}.table.bin`\n    const reverseBin = `${dictionary}.reverse.bin`\n    const prismBin = `${prism || dictionary}.prism.bin`\n    const schemaYaml = `${key}.schema.yaml`\n    const target = (schemaTarget as {[key: string]: string})[key]\n    for (const fileName of [tableBin, reverseBin, prismBin, schemaYaml]) {\n      for (const { name, md5 } of (targetFiles as { [key: string]: { name: string, md5: string }[]})[target]) {\n        if (fileName === name) {\n          files.push({ name, md5, target })\n          break\n        }\n      }\n    }\n    return files\n  }\n  const files = getFiles(schemaId)\n  await Promise.all(files.map(async ({ name, target, md5 }) => {\n    const path = `${RIME_SHARED}/build/${name}`\n    try {\n      Module.FS.lookupPath(path)\n    } catch (e) { // not exists\n      const ab = await lazyCache.get(name, md5, getURL(target, name))\n      Module.FS.writeFile(path, new Uint8Array(ab))\n    }\n  }))\n}\n\nasync function setIME (schemaId: string) {\n  if (!deployed) {\n    await fetchPrebuilt(schemaId)\n  }\n  Module.ccall('set_ime', 'null', ['string'], [schemaId])\n  return syncUserDirectory('write')\n}\n\nfunction syncUserDirectory (direction: 'read' | 'write') {\n  let resolve: (_: any) => void\n  let reject: (err: any) => void\n  const promise = new Promise<void>((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n  Module.FS.syncfs(direction === 'read', (err: any) => {\n    if (err) {\n      reject(err)\n    }\n    resolve(null)\n  })\n  return promise\n}\n\nconst readyPromise = loadWasm('rime.js', {\n  url: '__LIBRESERVICE_CDN__',\n  async init () {\n    Module.FS.mkdir(RIME_USER)\n    Module.FS.mount(IDBFS, {}, RIME_USER)\n    await syncUserDirectory('read')\n    Module.ccall('init', 'null', [], [])\n    for (const [schema, name] of Object.entries(schemaName)) {\n      Module.ccall('set_schema_name', 'null', ['string', 'string'], [schema, name])\n    }\n  },\n  Module: {\n    // Customize for glog\n    printErr (message: string) {\n      const match = message.match(/[EWID]\\S+ \\S+ \\S+ (.*)/)\n      if (match) {\n        ({\n          E: console.error,\n          W: console.warn,\n          I: console.info,\n          D: console.debug\n        })[message[0] as 'E' | 'W' | 'I' | 'D'](match[1])\n      } else {\n        console.error(message)\n      }\n    }\n  }\n})\n\nlet deployed = false\nconst deployStatus = control('deployStatus')\n// @ts-ignore\nglobalThis._deployStatus = (status: 'start' | 'failure' | 'success', schemas: string) => { // called from api.cpp\n  if (status === 'success') {\n    deployed = true\n  }\n  deployStatus(status, schemas)\n}\n\nfunction rmStar (path: string) {\n  for (const file of Module.FS.readdir(path)) {\n    if (file === '.' || file === '..') {\n      continue\n    }\n    const subPath = `${path}/${file}`\n    const { mode } = Module.FS.lstat(subPath)\n    if (Module.FS.isDir(mode)) {\n      rmStar(subPath)\n      Module.FS.rmdir(subPath)\n    } else {\n      Module.FS.unlink(subPath)\n    }\n  }\n}\n\nasync function resetUserDirectory () {\n  rmStar(RIME_USER)\n  await syncUserDirectory('write')\n  deployed = false\n  Module.ccall('reset', 'null', [], [])\n}\n\nexpose({\n  fsOperate,\n  resetUserDirectory,\n  setIME,\n  setOption (option: string, value: boolean): void {\n    return Module.ccall('set_option', 'null', ['string', 'number'], [option, value])\n  },\n  setPageSize (size: number) {\n    return Module.ccall('set_page_size', 'null', ['number'], [size])\n  },\n  deploy (): void {\n    return Module.ccall('deploy', 'null', [], [])\n  },\n  async process (input: string): Promise<RIME_RESULT> {\n    const result = JSON.parse(Module.ccall('process', 'string', ['string'], [input]))\n    if ('committed' in result) {\n      await syncUserDirectory('write') // record frequency\n    }\n    return result\n  },\n  selectCandidateOnCurrentPage (index: number): string {\n    return Module.ccall('select_candidate_on_current_page', 'string', ['number'], [index])\n  }\n}, readyPromise)\n"],"names":["files"],"mappings":"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","x_google_ignoreList":[0,1,2]}